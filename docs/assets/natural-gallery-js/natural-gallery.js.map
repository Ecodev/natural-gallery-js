{"version":3,"sources":["../../../node_modules/lodash-es/_freeGlobal.js","../../../node_modules/lodash-es/_root.js","../../../node_modules/lodash-es/_Symbol.js","../../../node_modules/lodash-es/_getRawTag.js","../../../node_modules/lodash-es/_objectToString.js","../../../node_modules/lodash-es/_baseGetTag.js","../../../node_modules/lodash-es/isObjectLike.js","../../../node_modules/lodash-es/isSymbol.js","../../../node_modules/lodash-es/_arrayMap.js","../../../node_modules/lodash-es/isArray.js","../../../node_modules/lodash-es/_baseToString.js","../../../node_modules/lodash-es/_trimmedEndIndex.js","../../../node_modules/lodash-es/_baseTrim.js","../../../node_modules/lodash-es/isObject.js","../../../node_modules/lodash-es/toNumber.js","../../../node_modules/lodash-es/identity.js","../../../node_modules/lodash-es/isFunction.js","../../../node_modules/lodash-es/_coreJsData.js","../../../node_modules/lodash-es/_isMasked.js","../../../node_modules/lodash-es/_toSource.js","../../../node_modules/lodash-es/_baseIsNative.js","../../../node_modules/lodash-es/_getValue.js","../../../node_modules/lodash-es/_getNative.js","../../../node_modules/lodash-es/_baseCreate.js","../../../node_modules/lodash-es/_apply.js","../../../node_modules/lodash-es/_copyArray.js","../../../node_modules/lodash-es/_shortOut.js","../../../node_modules/lodash-es/constant.js","../../../node_modules/lodash-es/_defineProperty.js","../../../node_modules/lodash-es/_baseSetToString.js","../../../node_modules/lodash-es/_setToString.js","../../../node_modules/lodash-es/_isIndex.js","../../../node_modules/lodash-es/_baseAssignValue.js","../../../node_modules/lodash-es/eq.js","../../../node_modules/lodash-es/_assignValue.js","../../../node_modules/lodash-es/_copyObject.js","../../../node_modules/lodash-es/_overRest.js","../../../node_modules/lodash-es/_baseRest.js","../../../node_modules/lodash-es/isLength.js","../../../node_modules/lodash-es/isArrayLike.js","../../../node_modules/lodash-es/_isIterateeCall.js","../../../node_modules/lodash-es/_createAssigner.js","../../../node_modules/lodash-es/_isPrototype.js","../../../node_modules/lodash-es/_baseTimes.js","../../../node_modules/lodash-es/_baseIsArguments.js","../../../node_modules/lodash-es/isArguments.js","../../../node_modules/lodash-es/stubFalse.js","../../../node_modules/lodash-es/isBuffer.js","../../../node_modules/lodash-es/_baseIsTypedArray.js","../../../node_modules/lodash-es/_baseUnary.js","../../../node_modules/lodash-es/_nodeUtil.js","../../../node_modules/lodash-es/isTypedArray.js","../../../node_modules/lodash-es/_arrayLikeKeys.js","../../../node_modules/lodash-es/_overArg.js","../../../node_modules/lodash-es/_nativeKeysIn.js","../../../node_modules/lodash-es/_baseKeysIn.js","../../../node_modules/lodash-es/keysIn.js","../../../node_modules/lodash-es/_isKey.js","../../../node_modules/lodash-es/_nativeCreate.js","../../../node_modules/lodash-es/_hashClear.js","../../../node_modules/lodash-es/_hashDelete.js","../../../node_modules/lodash-es/_hashGet.js","../../../node_modules/lodash-es/_hashHas.js","../../../node_modules/lodash-es/_hashSet.js","../../../node_modules/lodash-es/_Hash.js","../../../node_modules/lodash-es/_listCacheClear.js","../../../node_modules/lodash-es/_assocIndexOf.js","../../../node_modules/lodash-es/_listCacheDelete.js","../../../node_modules/lodash-es/_listCacheGet.js","../../../node_modules/lodash-es/_listCacheHas.js","../../../node_modules/lodash-es/_listCacheSet.js","../../../node_modules/lodash-es/_ListCache.js","../../../node_modules/lodash-es/_Map.js","../../../node_modules/lodash-es/_mapCacheClear.js","../../../node_modules/lodash-es/_isKeyable.js","../../../node_modules/lodash-es/_getMapData.js","../../../node_modules/lodash-es/_mapCacheDelete.js","../../../node_modules/lodash-es/_mapCacheGet.js","../../../node_modules/lodash-es/_mapCacheHas.js","../../../node_modules/lodash-es/_mapCacheSet.js","../../../node_modules/lodash-es/_MapCache.js","../../../node_modules/lodash-es/memoize.js","../../../node_modules/lodash-es/_memoizeCapped.js","../../../node_modules/lodash-es/_stringToPath.js","../../../node_modules/lodash-es/toString.js","../../../node_modules/lodash-es/_castPath.js","../../../node_modules/lodash-es/_toKey.js","../../../node_modules/lodash-es/_baseGet.js","../../../node_modules/lodash-es/_arrayPush.js","../../../node_modules/lodash-es/_isFlattenable.js","../../../node_modules/lodash-es/_baseFlatten.js","../../../node_modules/lodash-es/flatten.js","../../../node_modules/lodash-es/_flatRest.js","../../../node_modules/lodash-es/_getPrototype.js","../../../node_modules/lodash-es/isPlainObject.js","../../../node_modules/lodash-es/_stackClear.js","../../../node_modules/lodash-es/_stackDelete.js","../../../node_modules/lodash-es/_stackGet.js","../../../node_modules/lodash-es/_stackHas.js","../../../node_modules/lodash-es/_stackSet.js","../../../node_modules/lodash-es/_Stack.js","../../../node_modules/lodash-es/_cloneBuffer.js","../../../node_modules/lodash-es/_Uint8Array.js","../../../node_modules/lodash-es/_cloneArrayBuffer.js","../../../node_modules/lodash-es/_cloneTypedArray.js","../../../node_modules/lodash-es/_initCloneObject.js","../../../node_modules/lodash-es/_baseHasIn.js","../../../node_modules/lodash-es/_hasPath.js","../../../node_modules/lodash-es/hasIn.js","../../../node_modules/lodash-es/_createBaseFor.js","../../../node_modules/lodash-es/_baseFor.js","../../../node_modules/lodash-es/now.js","../../../node_modules/lodash-es/debounce.js","../../../node_modules/lodash-es/_assignMergeValue.js","../../../node_modules/lodash-es/isArrayLikeObject.js","../../../node_modules/lodash-es/_safeGet.js","../../../node_modules/lodash-es/toPlainObject.js","../../../node_modules/lodash-es/_baseMergeDeep.js","../../../node_modules/lodash-es/_baseMerge.js","../../../node_modules/lodash-es/_customDefaultsMerge.js","../../../node_modules/lodash-es/mergeWith.js","../../../node_modules/lodash-es/defaultsDeep.js","../../../node_modules/lodash-es/_baseSet.js","../../../node_modules/lodash-es/_basePickBy.js","../../../node_modules/lodash-es/_basePick.js","../../../node_modules/lodash-es/pick.js","../../../src/js/util/util.js","../../../src/js/util/dom-events.js","../../../src/js/util/viewport-size.js","../../../src/js/slide/pan-bounds.js","../../../src/js/slide/zoom-level.js","../../../src/js/slide/slide.js","../../../src/js/gestures/drag-handler.js","../../../src/js/gestures/zoom-handler.js","../../../src/js/gestures/tap-handler.js","../../../src/js/gestures/gestures.js","../../../src/js/main-scroll.js","../../../src/js/keyboard.js","../../../src/js/util/css-animation.js","../../../src/js/util/spring-easer.js","../../../src/js/util/spring-animation.js","../../../src/js/util/animations.js","../../../src/js/scroll-wheel.js","../../../src/js/ui/ui-element.js","../../../src/js/ui/button-arrow.js","../../../src/js/ui/button-close.js","../../../src/js/ui/button-zoom.js","../../../src/js/ui/loading-indicator.js","../../../src/js/ui/counter-indicator.js","../../../src/js/ui/ui.js","../../../src/js/slide/get-thumb-bounds.js","../../../src/js/core/eventable.js","../../../src/js/slide/placeholder.js","../../../src/js/slide/content.js","../../../src/js/slide/loader.js","../../../src/js/core/base.js","../../../src/js/opener.js","../../../src/js/photoswipe.js","../../../src/js/util/util.js","../../../src/js/core/eventable.js","../../../src/js/slide/placeholder.js","../../../src/js/slide/content.js","../../../src/js/util/viewport-size.js","../../../src/js/slide/zoom-level.js","../../../src/js/slide/loader.js","../../../src/js/core/base.js","../../../src/js/lightbox/lightbox.js","../../../src/js/Item.ts","../../../src/js/Utility.ts","../../../src/js/galleries/AbstractGallery.ts","../../../src/js/galleries/AbstractRowGallery.ts","../../../src/js/galleries/Natural.ts","../../../src/js/Column.ts","../../../src/js/galleries/Masonry.ts","../../../src/js/galleries/Square.ts"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n","import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n","import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n","import baseMerge from './_baseMerge.js';\nimport isObject from './isObject.js';\n\n/**\n * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n * objects into destination objects that are passed thru.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to merge.\n * @param {Object} object The parent object of `objValue`.\n * @param {Object} source The parent object of `srcValue`.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n  if (isObject(objValue) && isObject(srcValue)) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, objValue);\n    baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n    stack['delete'](srcValue);\n  }\n  return objValue;\n}\n\nexport default customDefaultsMerge;\n","import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nexport default mergeWith;\n","import apply from './_apply.js';\nimport baseRest from './_baseRest.js';\nimport customDefaultsMerge from './_customDefaultsMerge.js';\nimport mergeWith from './mergeWith.js';\n\n/**\n * This method is like `_.defaults` except that it recursively assigns\n * default properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaults\n * @example\n *\n * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n * // => { 'a': { 'b': 2, 'c': 3 } }\n */\nvar defaultsDeep = baseRest(function(args) {\n  args.push(undefined, customDefaultsMerge);\n  return apply(mergeWith, undefined, args);\n});\n\nexport default defaultsDeep;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","// Detect passive event listener support\r\nlet supportsPassive = false;\r\n/* eslint-disable */\r\ntry {\r\n  /* @ts-ignore */\r\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n    get: () => {\r\n      supportsPassive = true;\r\n    }\r\n  }));\r\n} catch (e) {}\r\n/* eslint-enable */\r\n\r\n/**\r\n * @typedef {Object} PoolItem\r\n * @prop {HTMLElement | Window | Document | undefined | null} target\r\n * @prop {string} type\r\n * @prop {EventListenerOrEventListenerObject} listener\r\n * @prop {boolean} [passive]\r\n */\r\n\r\nclass DOMEvents {\r\n  constructor() {\r\n    /**\r\n     * @type {PoolItem[]}\r\n     * @private\r\n     */\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type Can be multiple, separated by space.\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  add(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive);\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  remove(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive, true);\r\n  }\r\n\r\n  /**\r\n   * Removes all bound events\r\n   */\r\n  removeAll() {\r\n    this._pool.forEach((poolItem) => {\r\n      this._toggleListener(\r\n        poolItem.target,\r\n        poolItem.type,\r\n        poolItem.listener,\r\n        poolItem.passive,\r\n        true,\r\n        true\r\n      );\r\n    });\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds or removes event\r\n   *\r\n   * @private\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   * @param {boolean} [unbind] Whether the event should be added or removed\r\n   * @param {boolean} [skipPool] Whether events pool should be skipped\r\n   */\r\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    const methodName = unbind ? 'removeEventListener' : 'addEventListener';\r\n    const types = type.split(' ');\r\n    types.forEach((eType) => {\r\n      if (eType) {\r\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\r\n        // so developer doesn't need to do this manually\r\n        if (!skipPool) {\r\n          if (unbind) {\r\n            // Remove from the events pool\r\n            this._pool = this._pool.filter((poolItem) => {\r\n              return poolItem.type !== eType\r\n                || poolItem.listener !== listener\r\n                || poolItem.target !== target;\r\n            });\r\n          } else {\r\n            // Add to the events pool\r\n            this._pool.push({\r\n              target,\r\n              type: eType,\r\n              listener,\r\n              passive\r\n            });\r\n          }\r\n        }\r\n\r\n        // most PhotoSwipe events call preventDefault,\r\n        // and we do not need browser to scroll the page\r\n        const eventOptions = supportsPassive ? { passive: (passive || false) } : false;\r\n\r\n        target[methodName](\r\n          eType,\r\n          listener,\r\n          eventOptions\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default DOMEvents;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","import { clamp } from '../util/util.js';\r\nimport { parsePaddingOption } from '../util/viewport-size.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {Record<Axis, number>} Point */\r\n/** @typedef {'x' | 'y'} Axis */\r\n\r\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\r\nclass PanBounds {\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  constructor(slide) {\r\n    this.slide = slide;\r\n    this.currZoomLevel = 1;\r\n    this.center = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.max = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.min = /** @type {Point} */ { x: 0, y: 0 };\r\n  }\r\n\r\n  /**\r\n   * _getItemBounds\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  update(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n\r\n    if (!this.slide.width) {\r\n      this.reset();\r\n    } else {\r\n      this._updateAxis('x');\r\n      this._updateAxis('y');\r\n      this.slide.pswp.dispatch('calcBounds', { slide: this.slide });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * _calculateItemBoundsForAxis\r\n   *\r\n   * @param {Axis} axis\r\n   */\r\n  _updateAxis(axis) {\r\n    const { pswp } = this.slide;\r\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\r\n    const paddingProp = axis === 'x' ? 'left' : 'top';\r\n    const padding = parsePaddingOption(\r\n      paddingProp,\r\n      pswp.options,\r\n      pswp.viewportSize,\r\n      this.slide.data,\r\n      this.slide.index\r\n    );\r\n\r\n    const panAreaSize = this.slide.panAreaSize[axis];\r\n\r\n    // Default position of element.\r\n    // By default, it is center of viewport:\r\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding;\r\n\r\n    // maximum pan position\r\n    this.max[axis] = (elSize > panAreaSize)\r\n      ? Math.round(panAreaSize - elSize) + padding\r\n      : this.center[axis];\r\n\r\n    // minimum pan position\r\n    this.min[axis] = (elSize > panAreaSize)\r\n      ? padding\r\n      : this.center[axis];\r\n  }\r\n\r\n  // _getZeroBounds\r\n  reset() {\r\n    this.center.x = 0;\r\n    this.center.y = 0;\r\n    this.max.x = 0;\r\n    this.max.y = 0;\r\n    this.min.x = 0;\r\n    this.min.y = 0;\r\n  }\r\n\r\n  /**\r\n   * Correct pan position if it's beyond the bounds\r\n   *\r\n   * @param {Axis} axis x or y\r\n   * @param {number} panOffset\r\n   * @returns {number}\r\n   */\r\n  correctPan(axis, panOffset) { // checkPanBounds\r\n    return clamp(panOffset, this.max[axis], this.min[axis]);\r\n  }\r\n}\r\n\r\nexport default PanBounds;\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @typedef {_SlideData & Record<string, any>} SlideData\r\n * @typedef {Object} _SlideData\r\n * @prop {HTMLElement} [element] thumbnail element\r\n * @prop {string} [src] image URL\r\n * @prop {string} [srcset] image srcset\r\n * @prop {number} [w] image width (deprecated)\r\n * @prop {number} [h] image height (deprecated)\r\n * @prop {number} [width] image width\r\n * @prop {number} [height] image height\r\n * @prop {string} [msrc] placeholder image URL that's displayed before large image is loaded\r\n * @prop {string} [alt] image alt text\r\n * @prop {boolean} [thumbCropped] whether thumbnail is cropped client-side or not\r\n * @prop {string} [html] html content of a slide\r\n * @prop {'image' | 'html' | string} [type] slide type\r\n */\r\n\r\nimport {\r\n  createElement,\r\n  setTransform,\r\n  equalizePoints,\r\n  roundPoint,\r\n  toTransformString,\r\n  clamp,\r\n} from '../util/util.js';\r\n\r\nimport PanBounds from './pan-bounds.js';\r\nimport ZoomLevel from './zoom-level.js';\r\nimport { getPanAreaSize } from '../util/viewport-size.js';\r\n\r\n/**\r\n * Renders and allows to control a single slide\r\n */\r\nclass Slide {\r\n  /**\r\n   * @param {SlideData} data\r\n   * @param {number} index\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(data, index, pswp) {\r\n    this.data = data;\r\n    this.index = index;\r\n    this.pswp = pswp;\r\n    this.isActive = (index === pswp.currIndex);\r\n    this.currentResolution = 0;\r\n    /** @type {Point} */\r\n    this.panAreaSize = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.pan = { x: 0, y: 0 };\r\n\r\n    this.isFirstSlide = (this.isActive && !pswp.opener.isOpen);\r\n\r\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\r\n\r\n    this.pswp.dispatch('gettingData', {\r\n      slide: this,\r\n      data: this.data,\r\n      index\r\n    });\r\n\r\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\r\n    this.container = createElement('pswp__zoom-wrap', 'div');\r\n    /** @type {HTMLElement | null} */\r\n    this.holderElement = null;\r\n\r\n    this.currZoomLevel = 1;\r\n    /** @type {number} */\r\n    this.width = this.content.width;\r\n    /** @type {number} */\r\n    this.height = this.content.height;\r\n    this.heavyAppended = false;\r\n    this.bounds = new PanBounds(this);\r\n\r\n    this.prevDisplayedWidth = -1;\r\n    this.prevDisplayedHeight = -1;\r\n\r\n    this.pswp.dispatch('slideInit', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {boolean} isActive\r\n   */\r\n  setIsActive(isActive) {\r\n    if (isActive && !this.isActive) {\r\n      // slide just became active\r\n      this.activate();\r\n    } else if (!isActive && this.isActive) {\r\n      // slide just became non-active\r\n      this.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends slide content to DOM\r\n   *\r\n   * @param {HTMLElement} holderElement\r\n   */\r\n  append(holderElement) {\r\n    this.holderElement = holderElement;\r\n\r\n    this.container.style.transformOrigin = '0 0';\r\n\r\n    // Slide appended to DOM\r\n    if (!this.data) {\r\n      return;\r\n    }\r\n\r\n    this.calculateSize();\r\n\r\n    this.load();\r\n    this.updateContentSize();\r\n    this.appendHeavy();\r\n\r\n    this.holderElement.appendChild(this.container);\r\n\r\n    this.zoomAndPanToInitial();\r\n\r\n    this.pswp.dispatch('firstZoomPan', { slide: this });\r\n\r\n    this.applyCurrentZoomPan();\r\n\r\n    this.pswp.dispatch('afterSetContent', { slide: this });\r\n\r\n    if (this.isActive) {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  load() {\r\n    this.content.load(false);\r\n    this.pswp.dispatch('slideLoad', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Append \"heavy\" DOM elements\r\n   *\r\n   * This may depend on a type of slide,\r\n   * but generally these are large images.\r\n   */\r\n  appendHeavy() {\r\n    const { pswp } = this;\r\n    const appendHeavyNearby = true; // todo\r\n\r\n    // Avoid appending heavy elements during animations\r\n    if (this.heavyAppended\r\n        || !pswp.opener.isOpen\r\n        || pswp.mainScroll.isShifted()\r\n        || (!this.isActive && !appendHeavyNearby)) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('appendHeavy', { slide: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.heavyAppended = true;\r\n\r\n    this.content.append();\r\n\r\n    this.pswp.dispatch('appendHeavyContent', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide is active (selected).\r\n   *\r\n   * If it's part of opening/closing transition -\r\n   * activate() will trigger after the transition is ended.\r\n   */\r\n  activate() {\r\n    this.isActive = true;\r\n    this.appendHeavy();\r\n    this.content.activate();\r\n    this.pswp.dispatch('slideActivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide becomes inactive.\r\n   *\r\n   * Slide can become inactive only after it was active.\r\n   */\r\n  deactivate() {\r\n    this.isActive = false;\r\n    this.content.deactivate();\r\n\r\n    if (this.currZoomLevel !== this.zoomLevels.initial) {\r\n      // allow filtering\r\n      this.calculateSize();\r\n    }\r\n\r\n    // reset zoom level\r\n    this.currentResolution = 0;\r\n    this.zoomAndPanToInitial();\r\n    this.applyCurrentZoomPan();\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('slideDeactivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * The slide should destroy itself, it will never be used again.\r\n   * (unbind all events and destroy internal components)\r\n   */\r\n  destroy() {\r\n    this.content.hasSlide = false;\r\n    this.content.remove();\r\n    this.container.remove();\r\n    this.pswp.dispatch('slideDestroy', { slide: this });\r\n  }\r\n\r\n  resize() {\r\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\r\n      // Keep initial zoom level if it was before the resize,\r\n      // as well as when this slide is not active\r\n\r\n      // Reset position and scale to original state\r\n      this.calculateSize();\r\n      this.currentResolution = 0;\r\n      this.zoomAndPanToInitial();\r\n      this.applyCurrentZoomPan();\r\n      this.updateContentSize();\r\n    } else {\r\n      // readjust pan position if it's beyond the bounds\r\n      this.calculateSize();\r\n      this.bounds.update(this.currZoomLevel);\r\n      this.panTo(this.pan.x, this.pan.y);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Apply size to current slide content,\r\n   * based on the current resolution and scale.\r\n   *\r\n   * @param {boolean} [force] if size should be updated even if dimensions weren't changed\r\n   */\r\n  updateContentSize(force) {\r\n    // Use initial zoom level\r\n    // if resolution is not defined (user didn't zoom yet)\r\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\r\n\r\n    if (!scaleMultiplier) {\r\n      return;\r\n    }\r\n\r\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\r\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\r\n\r\n    if (!this.sizeChanged(width, height) && !force) {\r\n      return;\r\n    }\r\n    this.content.setDisplayedSize(width, height);\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  sizeChanged(width, height) {\r\n    if (width !== this.prevDisplayedWidth\r\n        || height !== this.prevDisplayedHeight) {\r\n      this.prevDisplayedWidth = width;\r\n      this.prevDisplayedHeight = height;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /** @returns {HTMLImageElement | HTMLDivElement | null | undefined} */\r\n  getPlaceholderElement() {\r\n    return this.content.placeholder?.element;\r\n  }\r\n\r\n  /**\r\n   * Zoom current slide image to...\r\n   *\r\n   * @param {number} destZoomLevel Destination zoom level.\r\n   * @param {Point} [centerPoint]\r\n   * Transform origin center point, or false if viewport center should be used.\r\n   * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\r\n   * @param {boolean} [ignoreBounds] Minimum and maximum zoom levels will be ignored.\r\n   */\r\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\r\n    const { pswp } = this;\r\n    if (!this.isZoomable()\r\n        || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    pswp.dispatch('beforeZoomTo', {\r\n      destZoomLevel, centerPoint, transitionDuration\r\n    });\r\n\r\n    // stop all pan and zoom transitions\r\n    pswp.animations.stopAllPan();\r\n\r\n    // if (!centerPoint) {\r\n    //   centerPoint = pswp.getViewportCenterPoint();\r\n    // }\r\n\r\n    const prevZoomLevel = this.currZoomLevel;\r\n\r\n    if (!ignoreBounds) {\r\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\r\n    }\r\n\r\n    // if (transitionDuration === undefined) {\r\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\r\n    // }\r\n\r\n    this.setZoomLevel(destZoomLevel);\r\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\r\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\r\n    roundPoint(this.pan);\r\n\r\n    const finishTransition = () => {\r\n      this._setResolution(destZoomLevel);\r\n      this.applyCurrentZoomPan();\r\n    };\r\n\r\n    if (!transitionDuration) {\r\n      finishTransition();\r\n    } else {\r\n      pswp.animations.startTransition({\r\n        isPan: true,\r\n        name: 'zoomTo',\r\n        target: this.container,\r\n        transform: this.getCurrentTransform(),\r\n        onComplete: finishTransition,\r\n        duration: transitionDuration,\r\n        easing: pswp.options.easing\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} [centerPoint]\r\n   */\r\n  toggleZoom(centerPoint) {\r\n    this.zoomTo(\r\n      this.currZoomLevel === this.zoomLevels.initial\r\n        ? this.zoomLevels.secondary : this.zoomLevels.initial,\r\n      centerPoint,\r\n      this.pswp.options.zoomAnimationDuration\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Updates zoom level property and recalculates new pan bounds,\r\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  setZoomLevel(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n    this.bounds.update(this.currZoomLevel);\r\n  }\r\n\r\n  /**\r\n   * Get pan position after zoom at a given `point`.\r\n   *\r\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n   * pan bounds according to the new zoom level.\r\n   *\r\n   * @param {'x' | 'y'} axis\r\n   * @param {Point} [point]\r\n   * point based on which zoom is performed, usually refers to the current mouse position,\r\n   * if false - viewport center will be used.\r\n   * @param {number} [prevZoomLevel] Zoom level before new zoom was applied.\r\n   * @returns {number}\r\n   */\r\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\r\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\r\n    if (totalPanDistance === 0) {\r\n      return this.bounds.center[axis];\r\n    }\r\n\r\n    if (!point) {\r\n      point = this.pswp.getViewportCenterPoint();\r\n    }\r\n\r\n    if (!prevZoomLevel) {\r\n      prevZoomLevel = this.zoomLevels.initial;\r\n    }\r\n\r\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\r\n    return this.bounds.correctPan(\r\n      axis,\r\n      (this.pan[axis] - point[axis]) * zoomFactor + point[axis]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Apply pan and keep it within bounds.\r\n   *\r\n   * @param {number} panX\r\n   * @param {number} panY\r\n   */\r\n  panTo(panX, panY) {\r\n    this.pan.x = this.bounds.correctPan('x', panX);\r\n    this.pan.y = this.bounds.correctPan('y', panY);\r\n    this.applyCurrentZoomPan();\r\n  }\r\n\r\n  /**\r\n   * If the slide in the current state can be panned by the user\r\n   * @returns {boolean}\r\n   */\r\n  isPannable() {\r\n    return Boolean(this.width) && (this.currZoomLevel > this.zoomLevels.fit);\r\n  }\r\n\r\n  /**\r\n   * If the slide can be zoomed\r\n   * @returns {boolean}\r\n   */\r\n  isZoomable() {\r\n    return Boolean(this.width) && this.content.isZoomable();\r\n  }\r\n\r\n  /**\r\n   * Apply transform and scale based on\r\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n   */\r\n  applyCurrentZoomPan() {\r\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\r\n    if (this === this.pswp.currSlide) {\r\n      this.pswp.dispatch('zoomPanUpdate', { slide: this });\r\n    }\r\n  }\r\n\r\n  zoomAndPanToInitial() {\r\n    this.currZoomLevel = this.zoomLevels.initial;\r\n\r\n    // pan according to the zoom level\r\n    this.bounds.update(this.currZoomLevel);\r\n    equalizePoints(this.pan, this.bounds.center);\r\n    this.pswp.dispatch('initialZoomPan', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Set translate and scale based on current resolution\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} zoom\r\n   * @private\r\n   */\r\n  _applyZoomTransform(x, y, zoom) {\r\n    zoom /= this.currentResolution || this.zoomLevels.initial;\r\n    setTransform(this.container, x, y, zoom);\r\n  }\r\n\r\n  calculateSize() {\r\n    const { pswp } = this;\r\n\r\n    equalizePoints(\r\n      this.panAreaSize,\r\n      getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index)\r\n    );\r\n\r\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\r\n\r\n    pswp.dispatch('calcSlideSize', {\r\n      slide: this\r\n    });\r\n  }\r\n\r\n  /** @returns {string} */\r\n  getCurrentTransform() {\r\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\r\n    return toTransformString(this.pan.x, this.pan.y, scale);\r\n  }\r\n\r\n  /**\r\n   * Set resolution and re-render the image.\r\n   *\r\n   * For example, if the real image size is 2000x1500,\r\n   * and resolution is 0.5 - it will be rendered as 1000x750.\r\n   *\r\n   * Image with zoom level 2 and resolution 0.5 is\r\n   * the same as image with zoom level 1 and resolution 1.\r\n   *\r\n   * Used to optimize animations and make\r\n   * sure that browser renders image in the highest quality.\r\n   * Also used by responsive images to load the correct one.\r\n   *\r\n   * @param {number} newResolution\r\n   */\r\n  _setResolution(newResolution) {\r\n    if (newResolution === this.currentResolution) {\r\n      return;\r\n    }\r\n\r\n    this.currentResolution = newResolution;\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('resolutionChanged');\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n","import {\r\n  equalizePoints, roundPoint, clamp\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst PAN_END_FRICTION = 0.35;\r\nconst VERTICAL_DRAG_FRICTION = 0.6;\r\n\r\n// 1 corresponds to the third of viewport height\r\nconst MIN_RATIO_TO_CLOSE = 0.4;\r\n\r\n// Minimum speed required to navigate\r\n// to next or previous slide\r\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\r\n\r\n/**\r\n * @param {number} initialVelocity\r\n * @param {number} decelerationRate\r\n * @returns {number}\r\n */\r\nfunction project(initialVelocity, decelerationRate) {\r\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\r\n}\r\n\r\n/**\r\n * Handles single pointer dragging\r\n */\r\nclass DragHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = gestures.pswp;\r\n    /** @type {Point} */\r\n    this.startPan = { x: 0, y: 0 };\r\n  }\r\n\r\n  start() {\r\n    if (this.pswp.currSlide) {\r\n      equalizePoints(this.startPan, this.pswp.currSlide.pan);\r\n    }\r\n    this.pswp.animations.stopAll();\r\n  }\r\n\r\n  change() {\r\n    const { p1, prevP1, dragAxis } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (dragAxis === 'y'\r\n        && this.pswp.options.closeOnVerticalDrag\r\n        && (currSlide && currSlide.currZoomLevel <= currSlide.zoomLevels.fit)\r\n        && !this.gestures.isMultitouch) {\r\n      // Handle vertical drag to close\r\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\r\n      if (!this.pswp.dispatch('verticalDrag', { panY }).defaultPrevented) {\r\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\r\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\r\n        this.pswp.applyBgOpacity(bgOpacity);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\r\n      if (!mainScrollChanged) {\r\n        this._panOrMoveMainScroll('y');\r\n\r\n        if (currSlide) {\r\n          roundPoint(currSlide.pan);\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  end() {\r\n    const { velocity } = this.gestures;\r\n    const { mainScroll, currSlide } = this.pswp;\r\n    let indexDiff = 0;\r\n\r\n    this.pswp.animations.stopAll();\r\n\r\n    // Handle main scroll if it's shifted\r\n    if (mainScroll.isShifted()) {\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX();\r\n\r\n      // Ratio between 0 and 1:\r\n      // 0 - slide is not visible at all,\r\n      // 0.5 - half of the slide is visible\r\n      // 1 - slide is fully visible\r\n      const currentSlideVisibilityRatio = (mainScrollShiftDiff / this.pswp.viewportSize.x);\r\n\r\n      // Go next slide.\r\n      //\r\n      // - if velocity and its direction is matched,\r\n      //   and we see at least tiny part of the next slide\r\n      //\r\n      // - or if we see less than 50% of the current slide\r\n      //   and velocity is close to 0\r\n      //\r\n      if ((velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0)\r\n          || (velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5)) {\r\n        // Go to next slide\r\n        indexDiff = 1;\r\n        velocity.x = Math.min(velocity.x, 0);\r\n      } else if ((velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0)\r\n          || (velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5)) {\r\n        // Go to prev slide\r\n        indexDiff = -1;\r\n        velocity.x = Math.max(velocity.x, 0);\r\n      }\r\n\r\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\r\n    }\r\n\r\n    // Restore zoom level\r\n    if ((currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.max)\r\n        || this.gestures.isMultitouch) {\r\n      this.gestures.zoomLevels.correctZoomPan(true);\r\n    } else {\r\n      // we run two animations instead of one,\r\n      // as each axis has own pan boundaries and thus different spring function\r\n      // (correctZoomPan does not have this functionality,\r\n      //  it animates all properties with single timing function)\r\n      this._finishPanGestureForAxis('x');\r\n      this._finishPanGestureForAxis('y');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   */\r\n  _finishPanGestureForAxis(axis) {\r\n    const { velocity } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const panPos = pan[axis];\r\n    const restoreBgOpacity = (this.pswp.bgOpacity < 1 && axis === 'y');\r\n\r\n    // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\r\n    // Increasing this number will reduce travel distance\r\n    const decelerationRate = 0.995; // 0.99\r\n\r\n    // Pan position if there is no bounds\r\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\r\n\r\n    if (restoreBgOpacity) {\r\n      const vDragRatio = this._getVerticalDragRatio(panPos);\r\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition);\r\n\r\n      // If we are above and moving upwards,\r\n      // or if we are below and moving downwards\r\n      if ((vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE)\r\n          || (vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE)) {\r\n        this.pswp.close();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Pan position with corrected bounds\r\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition);\r\n\r\n    // Exit if pan position should not be changed\r\n    // or if speed it too low\r\n    if (panPos === correctedPanPosition) {\r\n      return;\r\n    }\r\n\r\n    // Overshoot if the final position is out of pan bounds\r\n    const dampingRatio = (correctedPanPosition === projectedPosition) ? 1 : 0.82;\r\n\r\n    const initialBgOpacity = this.pswp.bgOpacity;\r\n    const totalPanDist = correctedPanPosition - panPos;\r\n\r\n    this.pswp.animations.startSpring({\r\n      name: 'panGesture' + axis,\r\n      isPan: true,\r\n      start: panPos,\r\n      end: correctedPanPosition,\r\n      velocity: velocity[axis],\r\n      dampingRatio,\r\n      onUpdate: (pos) => {\r\n        // Animate opacity of background relative to Y pan position of an image\r\n        if (restoreBgOpacity && this.pswp.bgOpacity < 1) {\r\n          // 0 - start of animation, 1 - end of animation\r\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist;\r\n\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          this.pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio,\r\n            0,\r\n            1\r\n          ));\r\n        }\r\n\r\n        pan[axis] = Math.floor(pos);\r\n        currSlide.applyCurrentZoomPan();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update position of the main scroll,\r\n   * or/and update pan position of the current slide.\r\n   *\r\n   * Should return true if it changes (or can change) main scroll.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @returns {boolean}\r\n   */\r\n  _panOrMoveMainScroll(axis) {\r\n    const { p1, dragAxis, prevP1, isMultitouch } = this.gestures;\r\n    const { currSlide, mainScroll } = this.pswp;\r\n    const delta = (p1[axis] - prevP1[axis]);\r\n    const newMainScrollX = mainScroll.x + delta;\r\n\r\n    if (!delta || !currSlide) {\r\n      return false;\r\n    }\r\n\r\n    // Always move main scroll if image can not be panned\r\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\r\n      mainScroll.moveTo(newMainScrollX, true);\r\n      return true; // changed main scroll\r\n    }\r\n\r\n    const { bounds } = currSlide;\r\n    const newPan = currSlide.pan[axis] + delta;\r\n\r\n    if (this.pswp.options.allowPanToNext\r\n        && dragAxis === 'x'\r\n        && axis === 'x'\r\n        && !isMultitouch) {\r\n      const currSlideMainScrollX = mainScroll.getCurrSlideX();\r\n\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\r\n\r\n      const isLeftToRight = delta > 0;\r\n      const isRightToLeft = !isLeftToRight;\r\n\r\n      if (newPan > bounds.min[axis] && isLeftToRight) {\r\n        // Panning from left to right, beyond the left edge\r\n\r\n        // Wether the image was at minimum pan position (or less)\r\n        // when this drag gesture started.\r\n        // Minimum pan position refers to the left edge of the image.\r\n        const wasAtMinPanPosition = (bounds.min[axis] <= this.startPan[axis]);\r\n\r\n        if (wasAtMinPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\r\n        // Paning from right to left, beyond the right edge\r\n\r\n        // Maximum pan position refers to the right edge of the image.\r\n        const wasAtMaxPanPosition = (this.startPan[axis] <= bounds.max[axis]);\r\n\r\n        if (wasAtMaxPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else {\r\n        // If main scroll is shifted\r\n        if (mainScrollShiftDiff !== 0) {\r\n          // If main scroll is shifted right\r\n          if (mainScrollShiftDiff > 0 /*&& isRightToLeft*/) {\r\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          } else if (mainScrollShiftDiff < 0 /*&& isLeftToRight*/) {\r\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\r\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          }\r\n        } else {\r\n          // We are within pan bounds, so just pan\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      }\r\n    } else {\r\n      if (axis === 'y') {\r\n        // Do not pan vertically if main scroll is shifted o\r\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      } else {\r\n        this._setPanWithFriction(axis, newPan);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // If we move above - the ratio is negative\r\n  // If we move below the ratio is positive\r\n\r\n  /**\r\n   * Relation between pan Y position and third of viewport height.\r\n   *\r\n   * When we are at initial position (center bounds) - the ratio is 0,\r\n   * if position is shifted upwards - the ratio is negative,\r\n   * if position is shifted downwards - the ratio is positive.\r\n   *\r\n   * @private\r\n   * @param {number} panY The current pan Y position.\r\n   * @returns {number}\r\n   */\r\n  _getVerticalDragRatio(panY) {\r\n    return (panY - (this.pswp.currSlide?.bounds.center.y ?? 0)) / (this.pswp.viewportSize.y / 3);\r\n  }\r\n\r\n  /**\r\n   * Set pan position of the current slide.\r\n   * Apply friction if the position is beyond the pan bounds,\r\n   * or if custom friction is defined.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} potentialPan\r\n   * @param {number} [customFriction] (0.1 - 1)\r\n   */\r\n  _setPanWithFriction(axis, potentialPan, customFriction) {\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const correctedPan = bounds.correctPan(axis, potentialPan);\r\n    // If we are out of pan bounds\r\n    if (correctedPan !== potentialPan || customFriction) {\r\n      const delta = Math.round(potentialPan - pan[axis]);\r\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\r\n    } else {\r\n      pan[axis] = potentialPan;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragHandler;\r\n","import {\r\n  equalizePoints, getDistanceBetween, clamp, pointsEqual\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst UPPER_ZOOM_FRICTION = 0.05;\r\nconst LOWER_ZOOM_FRICTION = 0.15;\r\n\r\n\r\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nfunction getZoomPointsCenter(p, p1, p2) {\r\n  p.x = (p1.x + p2.x) / 2;\r\n  p.y = (p1.y + p2.y) / 2;\r\n  return p;\r\n}\r\n\r\nclass ZoomHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startPan = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startZoomPoint = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._zoomPoint = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._wasOverFitZoomLevel = false;\r\n    /** @private */\r\n    this._startZoomLevel = 1;\r\n  }\r\n\r\n  start() {\r\n    const { currSlide } = this.gestures.pswp;\r\n    if (currSlide) {\r\n      this._startZoomLevel = currSlide.currZoomLevel;\r\n      equalizePoints(this._startPan, currSlide.pan);\r\n    }\r\n\r\n    this.gestures.pswp.animations.stopAllPan();\r\n    this._wasOverFitZoomLevel = false;\r\n  }\r\n\r\n  change() {\r\n    const { p1, startP1, p2, startP2, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const minZoomLevel = currSlide.zoomLevels.min;\r\n    const maxZoomLevel = currSlide.zoomLevels.max;\r\n\r\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\r\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\r\n\r\n    let currZoomLevel = (1 / getDistanceBetween(startP1, startP2))\r\n                      * getDistanceBetween(p1, p2)\r\n                      * this._startZoomLevel;\r\n\r\n    // slightly over the zoom.fit\r\n    if (currZoomLevel > currSlide.zoomLevels.initial + (currSlide.zoomLevels.initial / 15)) {\r\n      this._wasOverFitZoomLevel = true;\r\n    }\r\n\r\n    if (currZoomLevel < minZoomLevel) {\r\n      if (pswp.options.pinchToClose\r\n          && !this._wasOverFitZoomLevel\r\n          && this._startZoomLevel <= currSlide.zoomLevels.initial) {\r\n        // fade out background if zooming out\r\n        const bgOpacity = 1 - ((minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2));\r\n        if (!pswp.dispatch('pinchClose', { bgOpacity }).defaultPrevented) {\r\n          pswp.applyBgOpacity(bgOpacity);\r\n        }\r\n      } else {\r\n        // Apply the friction if zoom level is below the min\r\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\r\n      }\r\n    } else if (currZoomLevel > maxZoomLevel) {\r\n      // Apply the friction if zoom level is above the max\r\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\r\n    }\r\n\r\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\r\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\r\n\r\n    currSlide.setZoomLevel(currZoomLevel);\r\n    currSlide.applyCurrentZoomPan();\r\n  }\r\n\r\n  end() {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    if ((!currSlide || currSlide.currZoomLevel < currSlide.zoomLevels.initial)\r\n        && !this._wasOverFitZoomLevel\r\n        && pswp.options.pinchToClose) {\r\n      pswp.close();\r\n    } else {\r\n      this.correctZoomPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} currZoomLevel\r\n   * @returns {number}\r\n   */\r\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\r\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\r\n    return this._zoomPoint[axis]\r\n            - ((this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Correct currZoomLevel and pan if they are\r\n   * beyond minimum or maximum values.\r\n   * With animation.\r\n   *\r\n   * @param {boolean} [ignoreGesture]\r\n   * Wether gesture coordinates should be ignored when calculating destination pan position.\r\n   */\r\n  correctZoomPan(ignoreGesture) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide?.isZoomable()) {\r\n      return;\r\n    }\r\n\r\n    if (this._zoomPoint.x === 0) {\r\n      ignoreGesture = true;\r\n    }\r\n\r\n    const prevZoomLevel = currSlide.currZoomLevel;\r\n\r\n    /** @type {number} */\r\n    let destinationZoomLevel;\r\n    let currZoomLevelNeedsChange = true;\r\n\r\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\r\n      destinationZoomLevel = currSlide.zoomLevels.initial;\r\n      // zoom to min\r\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\r\n      destinationZoomLevel = currSlide.zoomLevels.max;\r\n      // zoom to max\r\n    } else {\r\n      currZoomLevelNeedsChange = false;\r\n      destinationZoomLevel = prevZoomLevel;\r\n    }\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const restoreBgOpacity = pswp.bgOpacity < 1;\r\n\r\n    const initialPan = equalizePoints({ x: 0, y: 0 }, currSlide.pan);\r\n    let destinationPan = equalizePoints({ x: 0, y: 0 }, initialPan);\r\n\r\n    if (ignoreGesture) {\r\n      this._zoomPoint.x = 0;\r\n      this._zoomPoint.y = 0;\r\n      this._startZoomPoint.x = 0;\r\n      this._startZoomPoint.y = 0;\r\n      this._startZoomLevel = prevZoomLevel;\r\n      equalizePoints(this._startPan, initialPan);\r\n    }\r\n\r\n    if (currZoomLevelNeedsChange) {\r\n      destinationPan = {\r\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\r\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\r\n      };\r\n    }\r\n\r\n    // set zoom level, so pan bounds are updated according to it\r\n    currSlide.setZoomLevel(destinationZoomLevel);\r\n\r\n    destinationPan = {\r\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\r\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\r\n    };\r\n\r\n    // return zoom level and its bounds to initial\r\n    currSlide.setZoomLevel(prevZoomLevel);\r\n\r\n    const panNeedsChange = !pointsEqual(destinationPan, initialPan);\r\n\r\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\r\n      // update resolution after gesture\r\n      currSlide._setResolution(destinationZoomLevel);\r\n      currSlide.applyCurrentZoomPan();\r\n\r\n      // nothing to animate\r\n      return;\r\n    }\r\n\r\n    pswp.animations.stopAllPan();\r\n\r\n    pswp.animations.startSpring({\r\n      isPan: true,\r\n      start: 0,\r\n      end: 1000,\r\n      velocity: 0,\r\n      dampingRatio: 1,\r\n      naturalFrequency: 40,\r\n      onUpdate: (now) => {\r\n        now /= 1000; // 0 - start, 1 - end\r\n\r\n        if (panNeedsChange || currZoomLevelNeedsChange) {\r\n          if (panNeedsChange) {\r\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\r\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\r\n          }\r\n\r\n          if (currZoomLevelNeedsChange) {\r\n            const newZoomLevel = prevZoomLevel\r\n                        + (destinationZoomLevel - prevZoomLevel) * now;\r\n            currSlide.setZoomLevel(newZoomLevel);\r\n          }\r\n\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n\r\n        // Restore background opacity\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1\r\n          ));\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        // update resolution after transition ends\r\n        currSlide._setResolution(destinationZoomLevel);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default ZoomHandler;\r\n","/**\r\n * @template {string} T\r\n * @template {string} P\r\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\r\n */\r\n\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\r\n\r\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {PointerEvent} event\r\n * @returns {boolean}\r\n */\r\nfunction didTapOnMainContent(event) {\r\n  return !!(/** @type {HTMLElement} */ (event.target).closest('.pswp__container'));\r\n}\r\n\r\n/**\r\n * Tap, double-tap handler.\r\n */\r\nclass TapHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  click(point, originalEvent) {\r\n    const targetClassList = /** @type {HTMLElement} */ (originalEvent.target).classList;\r\n    const isImageClick = targetClassList.contains('pswp__img');\r\n    const isBackgroundClick = targetClassList.contains('pswp__item')\r\n                              || targetClassList.contains('pswp__zoom-wrap');\r\n\r\n    if (isImageClick) {\r\n      this._doClickOrTapAction('imageClick', point, originalEvent);\r\n    } else if (isBackgroundClick) {\r\n      this._doClickOrTapAction('bgClick', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  tap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('tap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  doubleTap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Actions} actionName\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  _doClickOrTapAction(actionName, point, originalEvent) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const actionFullName = /** @type {AddPostfix<Actions, 'Action'>} */ (actionName + 'Action');\r\n    const optionValue = pswp.options[actionFullName];\r\n\r\n    if (pswp.dispatch(actionFullName, { point, originalEvent }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      optionValue.call(pswp, point, originalEvent);\r\n      return;\r\n    }\r\n\r\n    switch (optionValue) {\r\n      case 'close':\r\n      case 'next':\r\n        pswp[optionValue]();\r\n        break;\r\n      case 'zoom':\r\n        currSlide?.toggleZoom(point);\r\n        break;\r\n      case 'zoom-or-close':\r\n        // by default click zooms current image,\r\n        // if it can not be zoomed - gallery will be closed\r\n        if (currSlide?.isZoomable()\r\n            && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\r\n          currSlide.toggleZoom(point);\r\n        } else if (pswp.options.clickToCloseNonZoomable) {\r\n          pswp.close();\r\n        }\r\n        break;\r\n      case 'toggle-controls':\r\n        this.gestures.pswp.element?.classList.toggle('pswp--ui-visible');\r\n        // if (_controlsVisible) {\r\n        //   _ui.hideControls();\r\n        // } else {\r\n        //   _ui.showControls();\r\n        // }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TapHandler;\r\n","import {\r\n  equalizePoints, pointsEqual, getDistanceBetween\r\n} from '../util/util.js';\r\n\r\nimport DragHandler from './drag-handler.js';\r\nimport ZoomHandler from './zoom-handler.js';\r\nimport TapHandler from './tap-handler.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n// How far should user should drag\r\n// until we can determine that the gesture is swipe and its direction\r\nconst AXIS_SWIPE_HYSTERISIS = 10;\r\n//const PAN_END_FRICTION = 0.35;\r\n\r\nconst DOUBLE_TAP_DELAY = 300; // ms\r\nconst MIN_TAP_DISTANCE = 25; // px\r\n\r\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\r\nclass Gestures {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    /** @type {'x' | 'y' | null} */\r\n    this.dragAxis = null;\r\n\r\n    // point objects are defined once and reused\r\n    // PhotoSwipe keeps track only of two pointers, others are ignored\r\n    /** @type {Point} */\r\n    this.p1 = { x: 0, y: 0 }; // the first pressed pointer\r\n    /** @type {Point} */\r\n    this.p2 = { x: 0, y: 0 }; // the second pressed pointer\r\n    /** @type {Point} */\r\n    this.prevP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.prevP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.velocity = { x: 0, y: 0 };\r\n\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._lastStartP1 = { x: 0, y: 0 };\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._intervalP1 = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @type {Point[]}\r\n     * @private\r\n     */\r\n    this._ongoingPointers = [];\r\n    /** @private */\r\n    this._touchEventEnabled = 'ontouchstart' in window;\r\n    /** @private */\r\n    this._pointerEventEnabled = !!(window.PointerEvent);\r\n    this.supportsTouch = this._touchEventEnabled\r\n                          || (this._pointerEventEnabled && navigator.maxTouchPoints > 1);\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @private */\r\n    this._intervalTime = 0;\r\n    /** @private */\r\n    this._velocityCalculated = false;\r\n    this.isMultitouch = false;\r\n    this.isDragging = false;\r\n    this.isZooming = false;\r\n    /** @type {number | null} */\r\n    this.raf = null;\r\n    /** @type {NodeJS.Timeout | null}\r\n     * @private\r\n     */\r\n    this._tapTimer = null;\r\n\r\n    if (!this.supportsTouch) {\r\n      // disable pan to next slide for non-touch devices\r\n      pswp.options.allowPanToNext = false;\r\n    }\r\n\r\n    this.drag = new DragHandler(this);\r\n    this.zoomLevels = new ZoomHandler(this);\r\n    this.tapHandler = new TapHandler(this);\r\n\r\n    pswp.on('bindEvents', () => {\r\n      pswp.events.add(\r\n        pswp.scrollWrap,\r\n        'click',\r\n        /** @type EventListener */(this._onClick.bind(this))\r\n      );\r\n\r\n      if (this._pointerEventEnabled) {\r\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\r\n      } else if (this._touchEventEnabled) {\r\n        this._bindEvents('touch', 'start', 'end', 'cancel');\r\n\r\n        // In previous versions we also bound mouse event here,\r\n        // in case device supports both touch and mouse events,\r\n        // but newer versions of browsers now support PointerEvent.\r\n\r\n        // on iOS10 if you bind touchmove/end after touchstart,\r\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\r\n        // preventDefault will have no effect on touchmove and touchend.\r\n        // Unless you bind it previously.\r\n        if (pswp.scrollWrap) {\r\n          pswp.scrollWrap.ontouchmove = () => {};\r\n          pswp.scrollWrap.ontouchend = () => {};\r\n        }\r\n      } else {\r\n        this._bindEvents('mouse', 'down', 'up');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'mouse' | 'touch' | 'pointer'} pref\r\n   * @param {'down' | 'start'} down\r\n   * @param {'up' | 'end'} up\r\n   * @param {'cancel'} [cancel]\r\n   */\r\n  _bindEvents(pref, down, up, cancel) {\r\n    const { pswp } = this;\r\n    const { events } = pswp;\r\n\r\n    const cancelEvent = cancel ? pref + cancel : '';\r\n\r\n    events.add(\r\n      pswp.scrollWrap,\r\n      pref + down,\r\n      /** @type EventListener */(this.onPointerDown.bind(this))\r\n    );\r\n    events.add(window, pref + 'move', /** @type EventListener */(this.onPointerMove.bind(this)));\r\n    events.add(window, pref + up, /** @type EventListener */(this.onPointerUp.bind(this)));\r\n    if (cancelEvent) {\r\n      events.add(\r\n        pswp.scrollWrap,\r\n        cancelEvent,\r\n        /** @type EventListener */(this.onPointerUp.bind(this))\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerDown(e) {\r\n    // We do not call preventDefault for touch events\r\n    // to allow browser to show native dialog on longpress\r\n    // (the one that allows to save image or open it in new tab).\r\n    //\r\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\r\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\r\n    const isMousePointer = e.type === 'mousedown' || e.pointerType === 'mouse';\r\n\r\n    // Allow dragging only via left mouse button.\r\n    // http://www.quirksmode.org/js/events_properties.html\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\r\n    if (isMousePointer && e.button > 0) {\r\n      return;\r\n    }\r\n\r\n    const { pswp } = this;\r\n\r\n    // if PhotoSwipe is opening or closing\r\n    if (!pswp.opener.isOpen) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (pswp.dispatch('pointerDown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (isMousePointer) {\r\n      pswp.mouseDetected();\r\n\r\n      // preventDefault mouse event to prevent\r\n      // browser image drag feature\r\n      this._preventPointerEventBehaviour(e, 'down');\r\n    }\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    this._updatePoints(e, 'down');\r\n\r\n    if (this._numActivePoints === 1) {\r\n      this.dragAxis = null;\r\n      // we need to store initial point to determine the main axis,\r\n      // drag is activated only after the axis is determined\r\n      equalizePoints(this.startP1, this.p1);\r\n    }\r\n\r\n    if (this._numActivePoints > 1) {\r\n      // Tap or double tap should not trigger if more than one pointer\r\n      this._clearTapTimer();\r\n      this.isMultitouch = true;\r\n    } else {\r\n      this.isMultitouch = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerMove(e) {\r\n    this._preventPointerEventBehaviour(e, 'move');\r\n\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'move');\r\n\r\n    if (this.pswp.dispatch('pointerMove', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 1 && !this.isDragging) {\r\n      if (!this.dragAxis) {\r\n        this._calculateDragDirection();\r\n      }\r\n\r\n      // Drag axis was detected, emit drag.start\r\n      if (this.dragAxis && !this.isDragging) {\r\n        if (this.isZooming) {\r\n          this.isZooming = false;\r\n          this.zoomLevels.end();\r\n        }\r\n\r\n        this.isDragging = true;\r\n        this._clearTapTimer(); // Tap can not trigger after drag\r\n\r\n        // Adjust starting point\r\n        this._updateStartPoints();\r\n        this._intervalTime = Date.now();\r\n        //this._startTime = this._intervalTime;\r\n        this._velocityCalculated = false;\r\n        equalizePoints(this._intervalP1, this.p1);\r\n        this.velocity.x = 0;\r\n        this.velocity.y = 0;\r\n        this.drag.start();\r\n\r\n        this._rafStopLoop();\r\n        this._rafRenderLoop();\r\n      }\r\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\r\n      this._finishDrag();\r\n\r\n      this.isZooming = true;\r\n\r\n      // Adjust starting points\r\n      this._updateStartPoints();\r\n\r\n      this.zoomLevels.start();\r\n\r\n      this._rafStopLoop();\r\n      this._rafRenderLoop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finishDrag() {\r\n    if (this.isDragging) {\r\n      this.isDragging = false;\r\n\r\n      // Try to calculate velocity,\r\n      // if it wasn't calculated yet in drag.change\r\n      if (!this._velocityCalculated) {\r\n        this._updateVelocity(true);\r\n      }\r\n\r\n      this.drag.end();\r\n      this.dragAxis = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerUp(e) {\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'up');\r\n\r\n    if (this.pswp.dispatch('pointerUp', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 0) {\r\n      this._rafStopLoop();\r\n\r\n      if (this.isDragging) {\r\n        this._finishDrag();\r\n      } else if (!this.isZooming && !this.isMultitouch) {\r\n        //this.zoomLevels.correctZoomPan();\r\n        this._finishTap(e);\r\n      }\r\n    }\r\n\r\n    if (this._numActivePoints < 2 && this.isZooming) {\r\n      this.isZooming = false;\r\n      this.zoomLevels.end();\r\n\r\n      if (this._numActivePoints === 1) {\r\n        // Since we have 1 point left, we need to reinitiate drag\r\n        this.dragAxis = null;\r\n        this._updateStartPoints();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafRenderLoop() {\r\n    if (this.isDragging || this.isZooming) {\r\n      this._updateVelocity();\r\n\r\n      if (this.isDragging) {\r\n        // make sure that pointer moved since the last update\r\n        if (!pointsEqual(this.p1, this.prevP1)) {\r\n          this.drag.change();\r\n        }\r\n      } else /* if (this.isZooming) */ {\r\n        if (!pointsEqual(this.p1, this.prevP1)\r\n            || !pointsEqual(this.p2, this.prevP2)) {\r\n          this.zoomLevels.change();\r\n        }\r\n      }\r\n\r\n      this._updatePrevPoints();\r\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update velocity at 50ms interval\r\n   *\r\n   * @private\r\n   * @param {boolean} [force]\r\n   */\r\n  _updateVelocity(force) {\r\n    const time = Date.now();\r\n    const duration = time - this._intervalTime;\r\n\r\n    if (duration < 50 && !force) {\r\n      return;\r\n    }\r\n\r\n\r\n    this.velocity.x = this._getVelocity('x', duration);\r\n    this.velocity.y = this._getVelocity('y', duration);\r\n\r\n    this._intervalTime = time;\r\n    equalizePoints(this._intervalP1, this.p1);\r\n    this._velocityCalculated = true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _finishTap(e) {\r\n    const { mainScroll } = this.pswp;\r\n\r\n    // Do not trigger tap events if main scroll is shifted\r\n    if (mainScroll.isShifted()) {\r\n      // restore main scroll position\r\n      // (usually happens if stopped in the middle of animation)\r\n      mainScroll.moveIndexBy(0, true);\r\n      return;\r\n    }\r\n\r\n    // Do not trigger tap for touchcancel or pointercancel\r\n    if (e.type.indexOf('cancel') > 0) {\r\n      return;\r\n    }\r\n\r\n    // Trigger click instead of tap for mouse events\r\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\r\n      this.tapHandler.click(this.startP1, e);\r\n      return;\r\n    }\r\n\r\n    // Disable delay if there is no doubleTapAction\r\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0;\r\n\r\n    // If tapTimer is defined - we tapped recently,\r\n    // check if the current tap is close to the previous one,\r\n    // if yes - trigger double tap\r\n    if (this._tapTimer) {\r\n      this._clearTapTimer();\r\n      // Check if two taps were more or less on the same place\r\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\r\n        this.tapHandler.doubleTap(this.startP1, e);\r\n      }\r\n    } else {\r\n      equalizePoints(this._lastStartP1, this.startP1);\r\n      this._tapTimer = setTimeout(() => {\r\n        this.tapHandler.tap(this.startP1, e);\r\n        this._clearTapTimer();\r\n      }, tapDelay);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearTapTimer() {\r\n    if (this._tapTimer) {\r\n      clearTimeout(this._tapTimer);\r\n      this._tapTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get velocity for axis\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} duration\r\n   * @returns {number}\r\n   */\r\n  _getVelocity(axis, duration) {\r\n    // displacement is like distance, but can be negative.\r\n    const displacement = this.p1[axis] - this._intervalP1[axis];\r\n\r\n    if (Math.abs(displacement) > 1 && duration > 5) {\r\n      return displacement / duration;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafStopLoop() {\r\n    if (this.raf) {\r\n      cancelAnimationFrame(this.raf);\r\n      this.raf = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _preventPointerEventBehaviour(e, pointerType) {\r\n    const preventPointerEvent = this.pswp.applyFilters('preventPointerEvent', true, e, pointerType);\r\n    if (preventPointerEvent) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses and normalizes points from the touch, mouse or pointer event.\r\n   * Updates p1 and p2.\r\n   *\r\n   * @private\r\n   * @param {PointerEvent | TouchEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _updatePoints(e, pointerType) {\r\n    if (this._pointerEventEnabled) {\r\n      const pointerEvent = /** @type {PointerEvent} */ (e);\r\n      // Try to find the current pointer in ongoing pointers by its ID\r\n      const pointerIndex = this._ongoingPointers.findIndex((ongoingPointer) => {\r\n        return ongoingPointer.id === pointerEvent.pointerId;\r\n      });\r\n\r\n      if (pointerType === 'up' && pointerIndex > -1) {\r\n        // release the pointer - remove it from ongoing\r\n        this._ongoingPointers.splice(pointerIndex, 1);\r\n      } else if (pointerType === 'down' && pointerIndex === -1) {\r\n        // add new pointer\r\n        this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, { x: 0, y: 0 }));\r\n      } else if (pointerIndex > -1) {\r\n        // update existing pointer\r\n        this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\r\n      }\r\n\r\n      this._numActivePoints = this._ongoingPointers.length;\r\n\r\n      // update points that PhotoSwipe uses\r\n      // to calculate position and scale\r\n      if (this._numActivePoints > 0) {\r\n        equalizePoints(this.p1, this._ongoingPointers[0]);\r\n      }\r\n\r\n      if (this._numActivePoints > 1) {\r\n        equalizePoints(this.p2, this._ongoingPointers[1]);\r\n      }\r\n    } else {\r\n      const touchEvent = /** @type {TouchEvent} */ (e);\r\n\r\n      this._numActivePoints = 0;\r\n      if (touchEvent.type.indexOf('touch') > -1) {\r\n        // Touch Event\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\r\n        if (touchEvent.touches && touchEvent.touches.length > 0) {\r\n          this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\r\n          this._numActivePoints++;\r\n          if (touchEvent.touches.length > 1) {\r\n            this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\r\n            this._numActivePoints++;\r\n          }\r\n        }\r\n      } else {\r\n        // Mouse Event\r\n        this._convertEventPosToPoint(/** @type {PointerEvent} */ (e), this.p1);\r\n        if (pointerType === 'up') {\r\n          // clear all points on mouseup\r\n          this._numActivePoints = 0;\r\n        } else {\r\n          this._numActivePoints++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** update points that were used during previous rAF tick\r\n   * @private\r\n   */\r\n  _updatePrevPoints() {\r\n    equalizePoints(this.prevP1, this.p1);\r\n    equalizePoints(this.prevP2, this.p2);\r\n  }\r\n\r\n  /** update points at the start of gesture\r\n   * @private\r\n   */\r\n  _updateStartPoints() {\r\n    equalizePoints(this.startP1, this.p1);\r\n    equalizePoints(this.startP2, this.p2);\r\n    this._updatePrevPoints();\r\n  }\r\n\r\n  /** @private */\r\n  _calculateDragDirection() {\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      // if main scroll position is shifted – direction is always horizontal\r\n      this.dragAxis = 'x';\r\n    } else {\r\n      // calculate delta of the last touchmove tick\r\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\r\n\r\n      if (diff !== 0) {\r\n        // check if pointer was shifted horizontally or vertically\r\n        const axisToCheck = diff > 0 ? 'x' : 'y';\r\n\r\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\r\n          this.dragAxis = axisToCheck;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts touch, pointer or mouse event\r\n   * to PhotoSwipe point.\r\n   *\r\n   * @private\r\n   * @param {Touch | PointerEvent} e\r\n   * @param {Point} p\r\n   * @returns {Point}\r\n   */\r\n  _convertEventPosToPoint(e, p) {\r\n    p.x = e.pageX - this.pswp.offset.x;\r\n    p.y = e.pageY - this.pswp.offset.y;\r\n\r\n    if ('pointerId' in e) {\r\n      p.id = e.pointerId;\r\n    } else if (e.identifier !== undefined) {\r\n      p.id = e.identifier;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _onClick(e) {\r\n    // Do not allow click event to pass through after drag\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gestures;\r\n","import {\r\n  setTransform,\r\n  createElement,\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/slide.js').default} Slide */\r\n\r\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\r\n\r\nconst MAIN_SCROLL_END_FRICTION = 0.35;\r\n\r\n\r\n// const MIN_SWIPE_TRANSITION_DURATION = 250;\r\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\r\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\r\n\r\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\r\nclass MainScroll {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.x = 0;\r\n    this.slideWidth = 0;\r\n    /** @private */\r\n    this._currPositionIndex = 0;\r\n    /** @private */\r\n    this._prevPositionIndex = 0;\r\n    /** @private */\r\n    this._containerShiftIndex = -1;\r\n\r\n    /** @type {ItemHolder[]} */\r\n    this.itemHolders = [];\r\n  }\r\n\r\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {boolean} [resizeSlides] Whether slides content should resized\r\n   */\r\n  resize(resizeSlides) {\r\n    const { pswp } = this;\r\n    const newSlideWidth = Math.round(\r\n      pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing\r\n    );\r\n    // Mobile browsers might trigger a resize event during a gesture.\r\n    // (due to toolbar appearing or hiding).\r\n    // Avoid re-adjusting main scroll position if width wasn't changed\r\n    const slideWidthChanged = (newSlideWidth !== this.slideWidth);\r\n\r\n    if (slideWidthChanged) {\r\n      this.slideWidth = newSlideWidth;\r\n      this.moveTo(this.getCurrSlideX());\r\n    }\r\n\r\n    this.itemHolders.forEach((itemHolder, index) => {\r\n      if (slideWidthChanged) {\r\n        setTransform(itemHolder.el, (index + this._containerShiftIndex)\r\n                                    * this.slideWidth);\r\n      }\r\n\r\n      if (resizeSlides && itemHolder.slide) {\r\n        itemHolder.slide.resize();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reset X position of the main scroller to zero\r\n   */\r\n  resetPosition() {\r\n    // Position on the main scroller (offset)\r\n    // it is independent from slide index\r\n    this._currPositionIndex = 0;\r\n    this._prevPositionIndex = 0;\r\n\r\n    // This will force recalculation of size on next resize()\r\n    this.slideWidth = 0;\r\n\r\n    // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\r\n    this._containerShiftIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Create and append array of three items\r\n   * that hold data about slides in DOM\r\n   */\r\n  appendHolders() {\r\n    this.itemHolders = [];\r\n\r\n    // append our three slide holders -\r\n    // previous, current, and next\r\n    for (let i = 0; i < 3; i++) {\r\n      const el = createElement('pswp__item', 'div', this.pswp.container);\r\n      el.setAttribute('role', 'group');\r\n      el.setAttribute('aria-roledescription', 'slide');\r\n      el.setAttribute('aria-hidden', 'true');\r\n\r\n      // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\r\n      el.style.display = (i === 1) ? 'block' : 'none';\r\n\r\n      this.itemHolders.push({\r\n        el,\r\n        //index: -1\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n   * @returns {boolean}\r\n   */\r\n  canBeSwiped() {\r\n    return this.pswp.getNumItems() > 1;\r\n  }\r\n\r\n  /**\r\n   * Move main scroll by X amount of slides.\r\n   * For example:\r\n   *   `-1` will move to the previous slide,\r\n   *    `0` will reset the scroll position of the current slide,\r\n   *    `3` will move three slides forward\r\n   *\r\n   * If loop option is enabled - index will be automatically looped too,\r\n   * (for example `-1` will move to the last slide of the gallery).\r\n   *\r\n   * @param {number} diff\r\n   * @param {boolean} [animate]\r\n   * @param {number} [velocityX]\r\n   * @returns {boolean} whether index was changed or not\r\n   */\r\n  moveIndexBy(diff, animate, velocityX) {\r\n    const { pswp } = this;\r\n    let newIndex = pswp.potentialIndex + diff;\r\n    const numSlides = pswp.getNumItems();\r\n\r\n    if (pswp.canLoop()) {\r\n      newIndex = pswp.getLoopedIndex(newIndex);\r\n      const distance = (diff + numSlides) % numSlides;\r\n      if (distance <= numSlides / 2) {\r\n        // go forward\r\n        diff = distance;\r\n      } else {\r\n        // go backwards\r\n        diff = distance - numSlides;\r\n      }\r\n    } else {\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      } else if (newIndex >= numSlides) {\r\n        newIndex = numSlides - 1;\r\n      }\r\n      diff = newIndex - pswp.potentialIndex;\r\n    }\r\n\r\n    pswp.potentialIndex = newIndex;\r\n    this._currPositionIndex -= diff;\r\n\r\n    pswp.animations.stopMainScroll();\r\n\r\n    const destinationX = this.getCurrSlideX();\r\n    if (!animate) {\r\n      this.moveTo(destinationX);\r\n      this.updateCurrItem();\r\n    } else {\r\n      pswp.animations.startSpring({\r\n        isMainScroll: true,\r\n        start: this.x,\r\n        end: destinationX,\r\n        velocity: velocityX || 0,\r\n        naturalFrequency: 30,\r\n        dampingRatio: 1, //0.7,\r\n        onUpdate: (x) => {\r\n          this.moveTo(x);\r\n        },\r\n        onComplete: () => {\r\n          this.updateCurrItem();\r\n          pswp.appendHeavy();\r\n        }\r\n      });\r\n\r\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\r\n      if (pswp.canLoop()) {\r\n        const currDistance = (currDiff + numSlides) % numSlides;\r\n        if (currDistance <= numSlides / 2) {\r\n          // go forward\r\n          currDiff = currDistance;\r\n        } else {\r\n          // go backwards\r\n          currDiff = currDistance - numSlides;\r\n        }\r\n      }\r\n\r\n      // Force-append new slides during transition\r\n      // if difference between slides is more than 1\r\n      if (Math.abs(currDiff) > 1) {\r\n        this.updateCurrItem();\r\n      }\r\n    }\r\n\r\n    return Boolean(diff);\r\n  }\r\n\r\n  /**\r\n   * X position of the main scroll for the current slide\r\n   * (ignores position during dragging)\r\n   * @returns {number}\r\n   */\r\n  getCurrSlideX() {\r\n    return this.slideWidth * this._currPositionIndex;\r\n  }\r\n\r\n  /**\r\n   * Whether scroll position is shifted.\r\n   * For example, it will return true if the scroll is being dragged or animated.\r\n   * @returns {boolean}\r\n   */\r\n  isShifted() {\r\n    return this.x !== this.getCurrSlideX();\r\n  }\r\n\r\n  /**\r\n   * Update slides X positions and set their content\r\n   */\r\n  updateCurrItem() {\r\n    const { pswp } = this;\r\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\r\n\r\n    if (!positionDifference) {\r\n      return;\r\n    }\r\n\r\n    this._prevPositionIndex = this._currPositionIndex;\r\n\r\n    pswp.currIndex = pswp.potentialIndex;\r\n\r\n    let diffAbs = Math.abs(positionDifference);\r\n    /** @type {ItemHolder | undefined} */\r\n    let tempHolder;\r\n\r\n    if (diffAbs >= 3) {\r\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\r\n      diffAbs = 3;\r\n    }\r\n\r\n    for (let i = 0; i < diffAbs; i++) {\r\n      if (positionDifference > 0) {\r\n        tempHolder = this.itemHolders.shift();\r\n        if (tempHolder) {\r\n          this.itemHolders[2] = tempHolder; // move first to last\r\n\r\n          this._containerShiftIndex++;\r\n\r\n          setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex - diffAbs) + i + 2);\r\n        }\r\n      } else {\r\n        tempHolder = this.itemHolders.pop();\r\n        if (tempHolder) {\r\n          this.itemHolders.unshift(tempHolder); // move last to first\r\n\r\n          this._containerShiftIndex--;\r\n\r\n          setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex + diffAbs) - i - 2);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Reset transfrom every 50ish navigations in one direction.\r\n    //\r\n    // Otherwise transform will keep growing indefinitely,\r\n    // which might cause issues as browsers have a maximum transform limit.\r\n    // I wasn't able to reach it, but just to be safe.\r\n    // This should not cause noticable lag.\r\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\r\n      this.resetPosition();\r\n      this.resize();\r\n    }\r\n\r\n    // Pan transition might be running (and consntantly updating pan position)\r\n    pswp.animations.stopAllPan();\r\n\r\n    this.itemHolders.forEach((itemHolder, i) => {\r\n      if (itemHolder.slide) {\r\n        // Slide in the 2nd holder is always active\r\n        itemHolder.slide.setIsActive(i === 1);\r\n      }\r\n    });\r\n\r\n    pswp.currSlide = this.itemHolders[1]?.slide;\r\n    pswp.contentLoader.updateLazy(positionDifference);\r\n\r\n    if (pswp.currSlide) {\r\n      pswp.currSlide.applyCurrentZoomPan();\r\n    }\r\n\r\n    pswp.dispatch('change');\r\n  }\r\n\r\n  /**\r\n   * Move the X position of the main scroll container\r\n   *\r\n   * @param {number} x\r\n   * @param {boolean} [dragging]\r\n   */\r\n  moveTo(x, dragging) {\r\n    if (!this.pswp.canLoop() && dragging) {\r\n      // Apply friction\r\n      let newSlideIndexOffset = ((this.slideWidth * this._currPositionIndex) - x) / this.slideWidth;\r\n      newSlideIndexOffset += this.pswp.currIndex;\r\n      const delta = Math.round(x - this.x);\r\n\r\n      if ((newSlideIndexOffset < 0 && delta > 0)\r\n          || (newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0)) {\r\n        x = this.x + (delta * MAIN_SCROLL_END_FRICTION);\r\n      }\r\n    }\r\n\r\n    this.x = x;\r\n\r\n    if (this.pswp.container) {\r\n      setTransform(this.pswp.container, x);\r\n    }\r\n\r\n    this.pswp.dispatch('moveMainScroll', { x, dragging: dragging ?? false });\r\n  }\r\n}\r\n\r\nexport default MainScroll;\r\n","import { specialKeyUsed } from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Methods<T>} Methods<T>\r\n */\r\n\r\nconst KeyboardKeyCodesMap = {\r\n  Escape: 27,\r\n  z: 90,\r\n  ArrowLeft: 37,\r\n  ArrowUp: 38,\r\n  ArrowRight: 39,\r\n  ArrowDown: 40,\r\n  Tab: 9,\r\n};\r\n\r\n/**\r\n * @template {keyof KeyboardKeyCodesMap} T\r\n * @param {T} key\r\n * @param {boolean} isKeySupported\r\n * @returns {T | number | undefined}\r\n */\r\nconst getKeyboardEventKey = (key, isKeySupported) => {\r\n  return isKeySupported ? key : KeyboardKeyCodesMap[key];\r\n};\r\n\r\n/**\r\n * - Manages keyboard shortcuts.\r\n * - Helps trap focus within photoswipe.\r\n */\r\nclass Keyboard {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    /** @private */\r\n    this._wasFocused = false;\r\n\r\n    pswp.on('bindEvents', () => {\r\n      if (pswp.options.trapFocus) {\r\n        // Dialog was likely opened by keyboard if initial point is not defined\r\n        if (!pswp.options.initialPointerPos) {\r\n          // focus causes layout,\r\n          // which causes lag during the animation,\r\n          // that's why we delay it until the opener transition ends\r\n          this._focusRoot();\r\n        }\r\n\r\n        pswp.events.add(\r\n          document,\r\n          'focusin',\r\n          /** @type EventListener */(this._onFocusIn.bind(this))\r\n        );\r\n      }\r\n\r\n      pswp.events.add(document, 'keydown', /** @type EventListener */(this._onKeyDown.bind(this)));\r\n    });\r\n\r\n    const lastActiveElement = /** @type {HTMLElement} */ (document.activeElement);\r\n    pswp.on('destroy', () => {\r\n      if (pswp.options.returnFocus\r\n          && lastActiveElement\r\n          && this._wasFocused) {\r\n        lastActiveElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  _focusRoot() {\r\n    if (!this._wasFocused && this.pswp.element) {\r\n      this.pswp.element.focus();\r\n      this._wasFocused = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  _onKeyDown(e) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('keydown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (specialKeyUsed(e)) {\r\n      // don't do anything if special key pressed\r\n      // to prevent from overriding default browser actions\r\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\r\n      return;\r\n    }\r\n\r\n    /** @type {Methods<PhotoSwipe> | undefined} */\r\n    let keydownAction;\r\n    /** @type {'x' | 'y' | undefined} */\r\n    let axis;\r\n    let isForward = false;\r\n    const isKeySupported = 'key' in e;\r\n\r\n    switch (isKeySupported ? e.key : e.keyCode) {\r\n      case getKeyboardEventKey('Escape', isKeySupported):\r\n        if (pswp.options.escKey) {\r\n          keydownAction = 'close';\r\n        }\r\n        break;\r\n      case getKeyboardEventKey('z', isKeySupported):\r\n        keydownAction = 'toggleZoom';\r\n        break;\r\n      case getKeyboardEventKey('ArrowLeft', isKeySupported):\r\n        axis = 'x';\r\n        break;\r\n      case getKeyboardEventKey('ArrowUp', isKeySupported):\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('ArrowRight', isKeySupported):\r\n        axis = 'x';\r\n        isForward = true;\r\n        break;\r\n      case getKeyboardEventKey('ArrowDown', isKeySupported):\r\n        isForward = true;\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('Tab', isKeySupported):\r\n        this._focusRoot();\r\n        break;\r\n      default:\r\n    }\r\n\r\n    // if left/right/top/bottom key\r\n    if (axis) {\r\n      // prevent page scroll\r\n      e.preventDefault();\r\n\r\n      const { currSlide } = pswp;\r\n\r\n      if (pswp.options.arrowKeys\r\n          && axis === 'x'\r\n          && pswp.getNumItems() > 1) {\r\n        keydownAction = isForward ? 'next' : 'prev';\r\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\r\n        // up/down arrow keys pan the image vertically\r\n        // left/right arrow keys pan horizontally.\r\n        // Unless there is only one image,\r\n        // or arrowKeys option is disabled\r\n        currSlide.pan[axis] += isForward ? -80 : 80;\r\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\r\n      }\r\n    }\r\n\r\n    if (keydownAction) {\r\n      e.preventDefault();\r\n      // @ts-ignore\r\n      pswp[keydownAction]();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trap focus inside photoswipe\r\n   *\r\n   * @private\r\n   * @param {FocusEvent} e\r\n   */\r\n  _onFocusIn(e) {\r\n    const { template } = this.pswp;\r\n    if (template\r\n        && document !== e.target\r\n        && template !== e.target\r\n        && !template.contains(/** @type {Node} */ (e.target))) {\r\n      // focus root element\r\n      template.focus();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n","import { setTransitionStyle, removeTransitionStyle } from './util.js';\r\n\r\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/** @typedef {Object} DefaultCssAnimationProps\r\n *\r\n * @prop {HTMLElement} target\r\n * @prop {number} [duration]\r\n * @prop {string} [easing]\r\n * @prop {string} [transform]\r\n * @prop {string} [opacity]\r\n * */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultCssAnimationProps} CssAnimationProps */\r\n\r\n/**\r\n * Runs CSS transition.\r\n */\r\nclass CSSAnimation {\r\n  /**\r\n   * onComplete can be unpredictable, be careful about current state\r\n   *\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    const {\r\n      target,\r\n      onComplete,\r\n      transform,\r\n      onFinish = () => {},\r\n      duration = 333,\r\n      easing = DEFAULT_EASING,\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    // support only transform and opacity\r\n    const prop = transform ? 'transform' : 'opacity';\r\n    const propValue = props[prop] ?? '';\r\n\r\n    /** @private */\r\n    this._target = target;\r\n    /** @private */\r\n    this._onComplete = onComplete;\r\n    /** @private */\r\n    this._finished = false;\r\n\r\n    /** @private */\r\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\r\n\r\n    // Using timeout hack to make sure that animation\r\n    // starts even if the animated property was changed recently,\r\n    // otherwise transitionend might not fire or transition won't start.\r\n    // https://drafts.csswg.org/css-transitions/#starting\r\n    //\r\n    // ¯\\_(ツ)_/¯\r\n    /** @private */\r\n    this._helperTimeout = setTimeout(() => {\r\n      setTransitionStyle(target, prop, duration, easing);\r\n      this._helperTimeout = setTimeout(() => {\r\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\r\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false);\r\n\r\n        // Safari occasionally does not emit transitionend event\r\n        // if element property was modified during the transition,\r\n        // which may be caused by resize or third party component,\r\n        // using timeout as a safety fallback\r\n        this._helperTimeout = setTimeout(() => {\r\n          this._finalizeAnimation();\r\n        }, duration + 500);\r\n        target.style[prop] = propValue;\r\n      }, 30); // Do not reduce this number\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TransitionEvent} e\r\n   */\r\n  _onTransitionEnd(e) {\r\n    if (e.target === this._target) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finalizeAnimation() {\r\n    if (!this._finished) {\r\n      this._finished = true;\r\n      this.onFinish();\r\n      if (this._onComplete) {\r\n        this._onComplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._helperTimeout) {\r\n      clearTimeout(this._helperTimeout);\r\n    }\r\n    removeTransitionStyle(this._target);\r\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\r\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\r\n    if (!this._finished) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default CSSAnimation;\r\n","const DEFAULT_NATURAL_FREQUENCY = 12;\r\nconst DEFAULT_DAMPING_RATIO = 0.75;\r\n\r\n/**\r\n * Spring easing helper\r\n */\r\nclass SpringEaser {\r\n  /**\r\n   * @param {number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {number} [dampingRatio]\r\n   * Determines how bouncy animation will be.\r\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   * \"overshoot\" refers to part of animation that\r\n   * goes beyond the final value.\r\n   *\r\n   * @param {number} [naturalFrequency]\r\n   * Determines how fast animation will slow down.\r\n   * The higher value - the stiffer the transition will be,\r\n   * and the faster it will slow down.\r\n   * Recommended value from 10 to 50\r\n   */\r\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\r\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\r\n\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO;\r\n\r\n    // https://en.wikipedia.org/wiki/Natural_frequency\r\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\r\n\r\n    this._dampedFrequency = this._naturalFrequency;\r\n\r\n    if (this._dampingRatio < 1) {\r\n      this._dampedFrequency *= Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} deltaPosition Difference between current and end position of the animation\r\n   * @param {number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {number} Displacement, relative to the end position.\r\n   */\r\n  easeFrame(deltaPosition, deltaTime) {\r\n    // Inspired by Apple Webkit and Android spring function implementation\r\n    // https://en.wikipedia.org/wiki/Oscillation\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    // we ignore mass (assume that it's 1kg)\r\n\r\n    let displacement = 0;\r\n    let coeff;\r\n\r\n    deltaTime /= 1000;\r\n\r\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\r\n\r\n    if (this._dampingRatio === 1) {\r\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\r\n\r\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency) + coeff\r\n                        * naturalDumpingPow;\r\n    } else if (this._dampingRatio < 1) {\r\n      coeff = (1 / this._dampedFrequency)\r\n                * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\r\n\r\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\r\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\r\n\r\n      displacement = naturalDumpingPow\r\n                       * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency)\r\n                        * this._dampingRatio\r\n                        + naturalDumpingPow\r\n                        * (-this._dampedFrequency * deltaPosition * dumpedFSin\r\n                        + this._dampedFrequency * coeff * dumpedFCos);\r\n    }\r\n\r\n    // Overdamped (>1) damping ratio is not supported\r\n\r\n    return displacement;\r\n  }\r\n}\r\n\r\nexport default SpringEaser;\r\n","import SpringEaser from './spring-easer.js';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/**\r\n * @typedef {Object} DefaultSpringAnimationProps\r\n *\r\n * @prop {number} start\r\n * @prop {number} end\r\n * @prop {number} velocity\r\n * @prop {number} [dampingRatio]\r\n * @prop {number} [naturalFrequency]\r\n * @prop {(end: number) => void} onUpdate\r\n */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultSpringAnimationProps} SpringAnimationProps */\r\n\r\nclass SpringAnimation {\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    this._raf = 0;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      velocity,\r\n      onUpdate,\r\n      onComplete,\r\n      onFinish = () => {},\r\n      dampingRatio,\r\n      naturalFrequency\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\r\n    let prevTime = Date.now();\r\n    let deltaPosition = start - end;\r\n\r\n    const animationLoop = () => {\r\n      if (this._raf) {\r\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime);\r\n\r\n        // Stop the animation if velocity is low and position is close to end\r\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\r\n          // Finalize the animation\r\n          onUpdate(end);\r\n          if (onComplete) {\r\n            onComplete();\r\n          }\r\n          this.onFinish();\r\n        } else {\r\n          prevTime = Date.now();\r\n          onUpdate(deltaPosition + end);\r\n          this._raf = requestAnimationFrame(animationLoop);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._raf = requestAnimationFrame(animationLoop);\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._raf >= 0) {\r\n      cancelAnimationFrame(this._raf);\r\n    }\r\n    this._raf = 0;\r\n  }\r\n}\r\n\r\nexport default SpringAnimation;\r\n","import CSSAnimation from './css-animation.js';\r\nimport SpringAnimation from './spring-animation.js';\r\n\r\n/** @typedef {import('./css-animation.js').CssAnimationProps} CssAnimationProps */\r\n/** @typedef {import('./spring-animation.js').SpringAnimationProps} SpringAnimationProps */\r\n\r\n/** @typedef {Object} SharedAnimationProps\r\n * @prop {string} [name]\r\n * @prop {boolean} [isPan]\r\n * @prop {boolean} [isMainScroll]\r\n * @prop {VoidFunction} [onComplete]\r\n * @prop {VoidFunction} [onFinish]\r\n */\r\n\r\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\r\n/** @typedef {SpringAnimationProps | CssAnimationProps} AnimationProps */\r\n\r\n/**\r\n * Manages animations\r\n */\r\nclass Animations {\r\n  constructor() {\r\n    /** @type {Animation[]} */\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  startSpring(props) {\r\n    this._start(props, true);\r\n  }\r\n\r\n  /**\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  startTransition(props) {\r\n    this._start(props);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {AnimationProps} props\r\n   * @param {boolean} [isSpring]\r\n   * @returns {Animation}\r\n   */\r\n  _start(props, isSpring) {\r\n    const animation = isSpring\r\n      ? new SpringAnimation(/** @type SpringAnimationProps */ (props))\r\n      : new CSSAnimation(/** @type CssAnimationProps */ (props));\r\n\r\n    this.activeAnimations.push(animation);\r\n    animation.onFinish = () => this.stop(animation);\r\n\r\n    return animation;\r\n  }\r\n\r\n  /**\r\n   * @param {Animation} animation\r\n   */\r\n  stop(animation) {\r\n    animation.destroy();\r\n    const index = this.activeAnimations.indexOf(animation);\r\n    if (index > -1) {\r\n      this.activeAnimations.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  stopAll() { // _stopAllAnimations\r\n    this.activeAnimations.forEach((animation) => {\r\n      animation.destroy();\r\n    });\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * Stop all pan or zoom transitions\r\n   */\r\n  stopAllPan() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isPan) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  stopMainScroll() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isMainScroll) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if main scroll transition is running\r\n   */\r\n  // isMainScrollRunning() {\r\n  //   return this.activeAnimations.some((animation) => {\r\n  //     return animation.props.isMainScroll;\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Returns true if any pan or zoom transition is running\r\n   */\r\n  isPanRunning() {\r\n    return this.activeAnimations.some((animation) => {\r\n      return animation.props.isPan;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Animations;\r\n","/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\r\nclass ScrollWheel {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    pswp.events.add(pswp.element, 'wheel', /** @type EventListener */(this._onWheel.bind(this)));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {WheelEvent} e\r\n   */\r\n  _onWheel(e) {\r\n    e.preventDefault();\r\n    const { currSlide } = this.pswp;\r\n    let { deltaX, deltaY } = e;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('wheel', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\r\n      // zoom\r\n      if (currSlide.isZoomable()) {\r\n        let zoomFactor = -deltaY;\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          zoomFactor *= 0.05;\r\n        } else {\r\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\r\n        }\r\n        zoomFactor = 2 ** zoomFactor;\r\n\r\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\r\n        currSlide.zoomTo(destZoomLevel, {\r\n          x: e.clientX,\r\n          y: e.clientY\r\n        });\r\n      }\r\n    } else {\r\n      // pan\r\n      if (currSlide.isPannable()) {\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          // 18 - average line height\r\n          deltaX *= 18;\r\n          deltaY *= 18;\r\n        }\r\n\r\n        currSlide.panTo(\r\n          currSlide.pan.x - deltaX,\r\n          currSlide.pan.y - deltaY\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScrollWheel;\r\n","import { createElement } from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Methods<T>} Methods<T>\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementMarkupProps\r\n * @prop {boolean} [isCustomSVG]\r\n * @prop {string} inner\r\n * @prop {string} [outlineID]\r\n * @prop {number | string} [size]\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementData\r\n * @prop {DefaultUIElements | string} [name]\r\n * @prop {string} [className]\r\n * @prop {UIElementMarkup} [html]\r\n * @prop {boolean} [isButton]\r\n * @prop {keyof HTMLElementTagNameMap} [tagName]\r\n * @prop {string} [title]\r\n * @prop {string} [ariaLabel]\r\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\r\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\r\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\r\n * @prop {number} [order]\r\n */\r\n\r\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\r\n\r\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\r\n\r\n/**\r\n * @param {UIElementMarkup} [htmlData]\r\n * @returns {string}\r\n */\r\nfunction addElementHTML(htmlData) {\r\n  if (typeof htmlData === 'string') {\r\n    // Allow developers to provide full svg,\r\n    // For example:\r\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\r\n    //   <path d=\"...\" />\r\n    //   <circle ... />\r\n    // </svg>\r\n    // Can also be any HTML string.\r\n    return htmlData;\r\n  }\r\n\r\n  if (!htmlData || !htmlData.isCustomSVG) {\r\n    return '';\r\n  }\r\n\r\n  const svgData = htmlData;\r\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">';\r\n  // replace all %d with size\r\n  out = out.split('%d').join(/** @type {string} */ (svgData.size || 32));\r\n\r\n  // Icons may contain outline/shadow,\r\n  // to make it we \"clone\" base icon shape and add border to it.\r\n  // Icon itself and border are styled via CSS.\r\n  //\r\n  // Property shadowID defines ID of element that should be cloned.\r\n  if (svgData.outlineID) {\r\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\r\n  }\r\n\r\n  out += svgData.inner;\r\n\r\n  out += '</svg>';\r\n\r\n  return out;\r\n}\r\n\r\nclass UIElement {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   * @param {UIElementData} data\r\n   */\r\n  constructor(pswp, data) {\r\n    const name = data.name || data.className;\r\n    let elementHTML = data.html;\r\n\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (pswp.options[name] === false) {\r\n      // exit if element is disabled from options\r\n      return;\r\n    }\r\n\r\n    // Allow to override SVG icons from options\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\r\n      // arrowPrevSVG\r\n      // arrowNextSVG\r\n      // closeSVG\r\n      // zoomSVG\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      elementHTML = pswp.options[name + 'SVG'];\r\n    }\r\n\r\n    pswp.dispatch('uiElementCreate', { data });\r\n\r\n    let className = '';\r\n    if (data.isButton) {\r\n      className += 'pswp__button ';\r\n      className += (data.className || `pswp__button--${data.name}`);\r\n    } else {\r\n      className += (data.className || `pswp__${data.name}`);\r\n    }\r\n\r\n    let tagName = data.isButton ? (data.tagName || 'button') : (data.tagName || 'div');\r\n    tagName = /** @type {keyof HTMLElementTagNameMap} */ (tagName.toLowerCase());\r\n    /** @type {HTMLElement} */\r\n    const element = createElement(className, tagName);\r\n\r\n    if (data.isButton) {\r\n      if (tagName === 'button') {\r\n        /** @type {HTMLButtonElement} */ (element).type = 'button';\r\n      }\r\n\r\n      let { title } = data;\r\n      const { ariaLabel } = data;\r\n\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      if (typeof pswp.options[name + 'Title'] === 'string') {\r\n        // @ts-expect-error lookup only by `data.name` maybe?\r\n        title = pswp.options[name + 'Title'];\r\n      }\r\n\r\n      if (title) {\r\n        element.title = title;\r\n      }\r\n\r\n      const ariaText = ariaLabel || title;\r\n      if (ariaText) {\r\n        element.setAttribute('aria-label', ariaText);\r\n      }\r\n    }\r\n\r\n    element.innerHTML = addElementHTML(elementHTML);\r\n\r\n    if (data.onInit) {\r\n      data.onInit(element, pswp);\r\n    }\r\n\r\n    if (data.onClick) {\r\n      element.onclick = (e) => {\r\n        if (typeof data.onClick === 'string') {\r\n          // @ts-ignore\r\n          pswp[data.onClick]();\r\n        } else if (typeof data.onClick === 'function') {\r\n          data.onClick(e, element, pswp);\r\n        }\r\n      };\r\n    }\r\n\r\n    // Top bar is default position\r\n    const appendTo = data.appendTo || 'bar';\r\n    /** @type {HTMLElement | undefined} root element by default */\r\n    let container = pswp.element;\r\n    if (appendTo === 'bar') {\r\n      if (!pswp.topBar) {\r\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\r\n      }\r\n      container = pswp.topBar;\r\n    } else {\r\n      // element outside of top bar gets a secondary class\r\n      // that makes element fade out on close\r\n      element.classList.add('pswp__hide-on-close');\r\n\r\n      if (appendTo === 'wrapper') {\r\n        container = pswp.scrollWrap;\r\n      }\r\n    }\r\n\r\n    container?.appendChild(pswp.applyFilters('uiElement', element, data));\r\n  }\r\n}\r\n\r\nexport default UIElement;\r\n","/*\r\n  Backward and forward arrow buttons\r\n */\r\n\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {PhotoSwipe} pswp\r\n * @param {boolean} [isNextButton]\r\n */\r\nfunction initArrowButton(element, pswp, isNextButton) {\r\n  element.classList.add('pswp__button--arrow');\r\n  // TODO: this should point to a unique id for this instance\r\n  element.setAttribute('aria-controls', 'pswp__items');\r\n  pswp.on('change', () => {\r\n    if (!pswp.options.loop) {\r\n      if (isNextButton) {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\r\n      } else {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex > 0);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowPrev = {\r\n  name: 'arrowPrev',\r\n  className: 'pswp__button--arrow--prev',\r\n  title: 'Previous',\r\n  order: 10,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'prev',\r\n  onInit: initArrowButton\r\n};\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowNext = {\r\n  name: 'arrowNext',\r\n  className: 'pswp__button--arrow--next',\r\n  title: 'Next',\r\n  order: 11,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'next',\r\n  onInit: (el, pswp) => {\r\n    initArrowButton(el, pswp, true);\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst closeButton = {\r\n  name: 'close',\r\n  title: 'Close',\r\n  order: 20,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\r\n    outlineID: 'pswp__icn-close'\r\n  },\r\n  onClick: 'close'\r\n};\r\n\r\nexport default closeButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst zoomButton = {\r\n  name: 'zoom',\r\n  title: 'Zoom',\r\n  order: 10,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\r\n    outlineID: 'pswp__icn-zoom'\r\n  },\r\n  onClick: 'toggleZoom'\r\n};\r\n\r\nexport default zoomButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const loadingIndicator = {\r\n  name: 'preloader',\r\n  appendTo: 'bar',\r\n  order: 7,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\r\n    outlineID: 'pswp__icn-loading'\r\n  },\r\n  onInit: (indicatorElement, pswp) => {\r\n    /** @type {boolean | undefined} */\r\n    let isVisible;\r\n    /** @type {NodeJS.Timeout | null} */\r\n    let delayTimeout = null;\r\n\r\n    /**\r\n     * @param {string} className\r\n     * @param {boolean} add\r\n     */\r\n    const toggleIndicatorClass = (className, add) => {\r\n      indicatorElement.classList.toggle('pswp__preloader--' + className, add);\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} visible\r\n     */\r\n    const setIndicatorVisibility = (visible) => {\r\n      if (isVisible !== visible) {\r\n        isVisible = visible;\r\n        toggleIndicatorClass('active', visible);\r\n      }\r\n    };\r\n\r\n    const updatePreloaderVisibility = () => {\r\n      if (!pswp.currSlide?.content.isLoading()) {\r\n        setIndicatorVisibility(false);\r\n        if (delayTimeout) {\r\n          clearTimeout(delayTimeout);\r\n          delayTimeout = null;\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!delayTimeout) {\r\n        // display loading indicator with delay\r\n        delayTimeout = setTimeout(() => {\r\n          setIndicatorVisibility(Boolean(pswp.currSlide?.content.isLoading()));\r\n          delayTimeout = null;\r\n        }, pswp.options.preloaderDelay);\r\n      }\r\n    };\r\n\r\n    pswp.on('change', updatePreloaderVisibility);\r\n\r\n    pswp.on('loadComplete', (e) => {\r\n      if (pswp.currSlide === e.slide) {\r\n        updatePreloaderVisibility();\r\n      }\r\n    });\r\n\r\n    // expose the method\r\n    if (pswp.ui) {\r\n      pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\r\n    }\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const counterIndicator = {\r\n  name: 'counter',\r\n  order: 5,\r\n  onInit: (counterElement, pswp) => {\r\n    pswp.on('change', () => {\r\n      counterElement.innerText = (pswp.currIndex + 1)\r\n                                  + pswp.options.indexIndicatorSep\r\n                                  + pswp.getNumItems();\r\n    });\r\n  }\r\n};\r\n","import UIElement from './ui-element.js';\r\nimport { arrowPrev, arrowNext } from './button-arrow.js';\r\nimport closeButton from './button-close.js';\r\nimport zoomButton from './button-zoom.js';\r\nimport { loadingIndicator } from './loading-indicator.js';\r\nimport { counterIndicator } from './counter-indicator.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n\r\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default, it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {boolean} isZoomedIn\r\n */\r\nfunction setZoomedIn(el, isZoomedIn) {\r\n  el.classList.toggle('pswp--zoomed-in', isZoomedIn);\r\n}\r\n\r\nclass UI {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isRegistered = false;\r\n    /** @type {UIElementData[]} */\r\n    this.uiElementsData = [];\r\n    /** @type {(UIElement | UIElementData)[]} */\r\n    this.items = [];\r\n    /** @type {() => void} */\r\n    this.updatePreloaderVisibility = () => {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number | undefined}\r\n     */\r\n    this._lastUpdatedZoomLevel = undefined;\r\n  }\r\n\r\n  init() {\r\n    const { pswp } = this;\r\n    this.isRegistered = false;\r\n    this.uiElementsData = [\r\n      closeButton,\r\n      arrowPrev,\r\n      arrowNext,\r\n      zoomButton,\r\n      loadingIndicator,\r\n      counterIndicator\r\n    ];\r\n\r\n    pswp.dispatch('uiRegister');\r\n\r\n    // sort by order\r\n    this.uiElementsData.sort((a, b) => {\r\n      // default order is 0\r\n      return (a.order || 0) - (b.order || 0);\r\n    });\r\n\r\n    this.items = [];\r\n\r\n    this.isRegistered = true;\r\n    this.uiElementsData.forEach((uiElementData) => {\r\n      this.registerElement(uiElementData);\r\n    });\r\n\r\n    pswp.on('change', () => {\r\n      pswp.element?.classList.toggle('pswp--one-slide', pswp.getNumItems() === 1);\r\n    });\r\n\r\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\r\n  }\r\n\r\n  /**\r\n   * @param {UIElementData} elementData\r\n   */\r\n  registerElement(elementData) {\r\n    if (this.isRegistered) {\r\n      this.items.push(\r\n        new UIElement(this.pswp, elementData)\r\n      );\r\n    } else {\r\n      this.uiElementsData.push(elementData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired each time zoom or pan position is changed.\r\n   * Update classes that control visibility of zoom button and cursor icon.\r\n   *\r\n   * @private\r\n   */\r\n  _onZoomPanUpdate() {\r\n    const { template, currSlide, options } = this.pswp;\r\n\r\n    if (this.pswp.opener.isClosing || !template || !currSlide) {\r\n      return;\r\n    }\r\n\r\n    let { currZoomLevel } = currSlide;\r\n\r\n    // if not open yet - check against initial zoom level\r\n    if (!this.pswp.opener.isOpen) {\r\n      currZoomLevel = currSlide.zoomLevels.initial;\r\n    }\r\n\r\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\r\n      return;\r\n    }\r\n    this._lastUpdatedZoomLevel = currZoomLevel;\r\n\r\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary;\r\n\r\n    // Initial and secondary zoom levels are almost equal\r\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\r\n      // disable zoom\r\n      setZoomedIn(template, false);\r\n      template.classList.remove('pswp--zoom-allowed');\r\n      return;\r\n    }\r\n\r\n    template.classList.add('pswp--zoom-allowed');\r\n\r\n    const potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial\r\n      ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\r\n\r\n    setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\r\n\r\n    if (options.imageClickAction === 'zoom'\r\n        || options.imageClickAction === 'zoom-or-close') {\r\n      template.classList.add('pswp--click-to-zoom');\r\n    }\r\n  }\r\n}\r\n\r\nexport default UI;\r\n","/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns Bounds\r\n */\r\nfunction getBoundsByElement(el) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n  return {\r\n    x: thumbAreaRect.left,\r\n    y: thumbAreaRect.top,\r\n    w: thumbAreaRect.width\r\n  };\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {number} imageWidth\r\n * @param {number} imageHeight\r\n * @returns Bounds\r\n */\r\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n\r\n  // fill image into the area\r\n  // (do they same as object-fit:cover does to retrieve coordinates)\r\n  const hRatio = thumbAreaRect.width / imageWidth;\r\n  const vRatio = thumbAreaRect.height / imageHeight;\r\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\r\n\r\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\r\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\r\n\r\n  /**\r\n   * Coordinates of the image,\r\n   * as if it was not cropped,\r\n   * height is calculated automatically\r\n   *\r\n   * @type {Bounds}\r\n   */\r\n  const bounds = {\r\n    x: thumbAreaRect.left + offsetX,\r\n    y: thumbAreaRect.top + offsetY,\r\n    w: imageWidth * fillZoomLevel\r\n  };\r\n\r\n  // Coordinates of inner crop area\r\n  // relative to the image\r\n  bounds.innerRect = {\r\n    w: thumbAreaRect.width,\r\n    h: thumbAreaRect.height,\r\n    x: offsetX,\r\n    y: offsetY\r\n  };\r\n\r\n  return bounds;\r\n}\r\n\r\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {number} index\r\n * @param {SlideData} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns {Bounds | undefined}\r\n */\r\nexport function getThumbBounds(index, itemData, instance) {\r\n  // legacy event, before filters were introduced\r\n  const event = instance.dispatch('thumbBounds', {\r\n    index,\r\n    itemData,\r\n    instance\r\n  });\r\n  // @ts-expect-error\r\n  if (event.thumbBounds) {\r\n    // @ts-expect-error\r\n    return event.thumbBounds;\r\n  }\r\n\r\n  const { element } = itemData;\r\n  /** @type {Bounds | undefined} */\r\n  let thumbBounds;\r\n  /** @type {HTMLElement | null | undefined} */\r\n  let thumbnail;\r\n\r\n  if (element && instance.options.thumbSelector !== false) {\r\n    const thumbSelector = instance.options.thumbSelector || 'img';\r\n    thumbnail = element.matches(thumbSelector)\r\n      ? element : /** @type {HTMLElement | null} */ (element.querySelector(thumbSelector));\r\n  }\r\n\r\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\r\n\r\n  if (thumbnail) {\r\n    if (!itemData.thumbCropped) {\r\n      thumbBounds = getBoundsByElement(thumbnail);\r\n    } else {\r\n      thumbBounds = getCroppedBoundsByElement(\r\n        thumbnail,\r\n        itemData.width || itemData.w || 0,\r\n        itemData.height || itemData.h || 0\r\n      );\r\n    }\r\n  }\r\n\r\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\r\n}\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  setTransform,\r\n  equalizePoints,\r\n  decodeImage,\r\n  toTransformString\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\r\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\r\n\r\n// some browsers do not paint\r\n// elements which opacity is set to 0,\r\n// since we need to pre-render elements for the animation -\r\n// we set it to the minimum amount\r\nconst MIN_OPACITY = 0.003;\r\n\r\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\r\nclass Opener {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isClosed = true;\r\n    this.isOpen = false;\r\n    this.isClosing = false;\r\n    this.isOpening = false;\r\n    /**\r\n     * @private\r\n     * @type {number | false | undefined}\r\n     */\r\n    this._duration = undefined;\r\n    /** @private */\r\n    this._useAnimation = false;\r\n    /** @private */\r\n    this._croppedZoom = false;\r\n    /** @private */\r\n    this._animateRootOpacity = false;\r\n    /** @private */\r\n    this._animateBgOpacity = false;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | HTMLImageElement | null | undefined }\r\n     */\r\n    this._placeholder = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._opacityElement = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._cropContainer1 = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLElement | null | undefined }\r\n     */\r\n    this._cropContainer2 = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Bounds | undefined}\r\n     */\r\n    this._thumbBounds = undefined;\r\n\r\n\r\n    this._prepareOpen = this._prepareOpen.bind(this);\r\n\r\n    // Override initial zoom and pan position\r\n    pswp.on('firstZoomPan', this._prepareOpen);\r\n  }\r\n\r\n  open() {\r\n    this._prepareOpen();\r\n    this._start();\r\n  }\r\n\r\n  close() {\r\n    if (this.isClosed || this.isClosing || this.isOpening) {\r\n      // if we close during opening animation\r\n      // for now do nothing,\r\n      // browsers aren't good at changing the direction of the CSS transition\r\n      return;\r\n    }\r\n\r\n    const slide = this.pswp.currSlide;\r\n\r\n    this.isOpen = false;\r\n    this.isOpening = false;\r\n    this.isClosing = true;\r\n    this._duration = this.pswp.options.hideAnimationDuration;\r\n\r\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._applyStartProps();\r\n    setTimeout(() => {\r\n      this._start();\r\n    }, this._croppedZoom ? 30 : 0);\r\n  }\r\n\r\n  /** @private */\r\n  _prepareOpen() {\r\n    this.pswp.off('firstZoomPan', this._prepareOpen);\r\n    if (!this.isOpening) {\r\n      const slide = this.pswp.currSlide;\r\n      this.isOpening = true;\r\n      this.isClosing = false;\r\n      this._duration = this.pswp.options.showAnimationDuration;\r\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n        this._duration = 0;\r\n      }\r\n      this._applyStartProps();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _applyStartProps() {\r\n    const { pswp } = this;\r\n    const slide = this.pswp.currSlide;\r\n    const { options } = pswp;\r\n\r\n    if (options.showHideAnimationType === 'fade') {\r\n      options.showHideOpacity = true;\r\n      this._thumbBounds = undefined;\r\n    } else if (options.showHideAnimationType === 'none') {\r\n      options.showHideOpacity = false;\r\n      this._duration = 0;\r\n      this._thumbBounds = undefined;\r\n    } else if (this.isOpening && pswp._initialThumbBounds) {\r\n      // Use initial bounds if defined\r\n      this._thumbBounds = pswp._initialThumbBounds;\r\n    } else {\r\n      this._thumbBounds = this.pswp.getThumbBounds();\r\n    }\r\n\r\n    this._placeholder = slide?.getPlaceholderElement();\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Discard animations when duration is less than 50ms\r\n    this._useAnimation = Boolean(this._duration && this._duration > 50);\r\n    this._animateZoom = Boolean(this._thumbBounds)\r\n                        && slide?.content.usePlaceholder()\r\n                        && (!this.isClosing || !pswp.mainScroll.isShifted());\r\n    if (!this._animateZoom) {\r\n      this._animateRootOpacity = true;\r\n\r\n      if (this.isOpening && slide) {\r\n        slide.zoomAndPanToInitial();\r\n        slide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      this._animateRootOpacity = options.showHideOpacity ?? false;\r\n    }\r\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\r\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\r\n\r\n    if (!this._useAnimation) {\r\n      this._duration = 0;\r\n      this._animateZoom = false;\r\n      this._animateBgOpacity = false;\r\n      this._animateRootOpacity = true;\r\n      if (this.isOpening) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\r\n      // Properties are used when animation from cropped thumbnail\r\n      this._croppedZoom = true;\r\n      this._cropContainer1 = this.pswp.container;\r\n      this._cropContainer2 = this.pswp.currSlide?.holderElement;\r\n\r\n      if (pswp.container) {\r\n        pswp.container.style.overflow = 'hidden';\r\n        pswp.container.style.width = pswp.viewportSize.x + 'px';\r\n      }\r\n    } else {\r\n      this._croppedZoom = false;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n      // Apply styles before opening transition\r\n      if (this._animateRootOpacity) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      } else {\r\n        if (this._animateBgOpacity && pswp.bg) {\r\n          pswp.bg.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = '1';\r\n        }\r\n      }\r\n\r\n      if (this._animateZoom) {\r\n        this._setClosedStateZoomPan();\r\n        if (this._placeholder) {\r\n          // tell browser that we plan to animate the placeholder\r\n          this._placeholder.style.willChange = 'transform';\r\n\r\n          // hide placeholder to allow hiding of\r\n          // elements that overlap it (such as icons over the thumbnail)\r\n          this._placeholder.style.opacity = String(MIN_OPACITY);\r\n        }\r\n      }\r\n    } else if (this.isClosing) {\r\n      // hide nearby slides to make sure that\r\n      // they are not painted during the transition\r\n      if (pswp.mainScroll.itemHolders[0]) {\r\n        pswp.mainScroll.itemHolders[0].el.style.display = 'none';\r\n      }\r\n      if (pswp.mainScroll.itemHolders[2]) {\r\n        pswp.mainScroll.itemHolders[2].el.style.display = 'none';\r\n      }\r\n\r\n      if (this._croppedZoom) {\r\n        if (pswp.mainScroll.x !== 0) {\r\n          // shift the main scroller to zero position\r\n          pswp.mainScroll.resetPosition();\r\n          pswp.mainScroll.resize();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _start() {\r\n    if (this.isOpening\r\n        && this._useAnimation\r\n        && this._placeholder\r\n        && this._placeholder.tagName === 'IMG') {\r\n      // To ensure smooth animation\r\n      // we wait till the current slide image placeholder is decoded,\r\n      // but no longer than 250ms,\r\n      // and no shorter than 50ms\r\n      // (just using requestanimationframe is not enough in Firefox,\r\n      // for some reason)\r\n      new Promise((resolve) => {\r\n        let decoded = false;\r\n        let isDelaying = true;\r\n        decodeImage(/** @type {HTMLImageElement} */ (this._placeholder)).finally(() => {\r\n          decoded = true;\r\n          if (!isDelaying) {\r\n            resolve(true);\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          isDelaying = false;\r\n          if (decoded) {\r\n            resolve(true);\r\n          }\r\n        }, 50);\r\n        setTimeout(resolve, 250);\r\n      }).finally(() => this._initiate());\r\n    } else {\r\n      this._initiate();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _initiate() {\r\n    this.pswp.element?.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\r\n\r\n    this.pswp.dispatch(\r\n      this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'\r\n    );\r\n\r\n    // legacy event\r\n    this.pswp.dispatch(\r\n      /** @type {'initialZoomIn' | 'initialZoomOut'} */\r\n      ('initialZoom' + (this.isOpening ? 'In' : 'Out'))\r\n    );\r\n\r\n    this.pswp.element?.classList.toggle('pswp--ui-visible', this.isOpening);\r\n\r\n    if (this.isOpening) {\r\n      if (this._placeholder) {\r\n        // unhide the placeholder\r\n        this._placeholder.style.opacity = '1';\r\n      }\r\n      this._animateToOpenState();\r\n    } else if (this.isClosing) {\r\n      this._animateToClosedState();\r\n    }\r\n\r\n    if (!this._useAnimation) {\r\n      this._onAnimationComplete();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _onAnimationComplete() {\r\n    const { pswp } = this;\r\n    this.isOpen = this.isOpening;\r\n    this.isClosed = this.isClosing;\r\n    this.isOpening = false;\r\n    this.isClosing = false;\r\n\r\n    pswp.dispatch(\r\n      this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'\r\n    );\r\n\r\n    // legacy event\r\n    pswp.dispatch(\r\n      /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\r\n      ('initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'))\r\n    );\r\n\r\n    if (this.isClosed) {\r\n      pswp.destroy();\r\n    } else if (this.isOpen) {\r\n      if (this._animateZoom && pswp.container) {\r\n        pswp.container.style.overflow = 'visible';\r\n        pswp.container.style.width = '100%';\r\n      }\r\n      pswp.currSlide?.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToOpenState() {\r\n    const { pswp } = this;\r\n    if (this._animateZoom) {\r\n      if (this._croppedZoom && this._cropContainer1 && this._cropContainer2) {\r\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\r\n        this._animateTo(this._cropContainer2, 'transform', 'none');\r\n      }\r\n\r\n      if (pswp.currSlide) {\r\n        pswp.currSlide.zoomAndPanToInitial();\r\n        this._animateTo(\r\n          pswp.currSlide.container,\r\n          'transform',\r\n          pswp.currSlide.getCurrentTransform()\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this._animateBgOpacity && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '1');\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToClosedState() {\r\n    const { pswp } = this;\r\n\r\n    if (this._animateZoom) {\r\n      this._setClosedStateZoomPan(true);\r\n    }\r\n\r\n    // do not animate opacity if it's already at 0\r\n    if (this._animateBgOpacity && pswp.bgOpacity > 0.01 && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', '0');\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '0');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {boolean} [animate]\r\n   */\r\n  _setClosedStateZoomPan(animate) {\r\n    if (!this._thumbBounds) return;\r\n\r\n    const { pswp } = this;\r\n    const { innerRect } = this._thumbBounds;\r\n    const { currSlide, viewportSize } = pswp;\r\n\r\n    if (this._croppedZoom && innerRect && this._cropContainer1 && this._cropContainer2) {\r\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\r\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\r\n      const containerTwoPanX = viewportSize.x - innerRect.w;\r\n      const containerTwoPanY = viewportSize.y - innerRect.h;\r\n\r\n\r\n      if (animate) {\r\n        this._animateTo(\r\n          this._cropContainer1,\r\n          'transform',\r\n          toTransformString(containerOnePanX, containerOnePanY)\r\n        );\r\n\r\n        this._animateTo(\r\n          this._cropContainer2,\r\n          'transform',\r\n          toTransformString(containerTwoPanX, containerTwoPanY)\r\n        );\r\n      } else {\r\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\r\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\r\n      }\r\n    }\r\n\r\n    if (currSlide) {\r\n      equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\r\n      currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\r\n      if (animate) {\r\n        this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\r\n      } else {\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {HTMLElement} target\r\n   * @param {'transform' | 'opacity'} prop\r\n   * @param {string} propValue\r\n   */\r\n  _animateTo(target, prop, propValue) {\r\n    if (!this._duration) {\r\n      target.style[prop] = propValue;\r\n      return;\r\n    }\r\n\r\n    const { animations } = this.pswp;\r\n    /** @type {AnimationProps} */\r\n    const animProps = {\r\n      duration: this._duration,\r\n      easing: this.pswp.options.easing,\r\n      onComplete: () => {\r\n        if (!animations.activeAnimations.length) {\r\n          this._onAnimationComplete();\r\n        }\r\n      },\r\n      target,\r\n    };\r\n    animProps[prop] = propValue;\r\n    animations.startTransition(animProps);\r\n  }\r\n}\r\n\r\nexport default Opener;\r\n","import {\r\n  createElement,\r\n  equalizePoints,\r\n  pointsEqual,\r\n  clamp,\r\n} from './util/util.js';\r\n\r\nimport DOMEvents from './util/dom-events.js';\r\nimport Slide from './slide/slide.js';\r\nimport Gestures from './gestures/gestures.js';\r\nimport MainScroll from './main-scroll.js';\r\n\r\nimport Keyboard from './keyboard.js';\r\nimport Animations from './util/animations.js';\r\nimport ScrollWheel from './scroll-wheel.js';\r\nimport UI from './ui/ui.js';\r\nimport { getViewportSize } from './util/viewport-size.js';\r\nimport { getThumbBounds } from './slide/get-thumb-bounds.js';\r\nimport PhotoSwipeBase from './core/base.js';\r\nimport Opener from './opener.js';\r\nimport ContentLoader from './slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\r\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n/** @typedef {import('./slide/get-thumb-bounds').Bounds} Bounds */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\r\n */\r\n\r\n/** @typedef {{ x: number; y: number; id?: string | number }} Point */\r\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\r\n/** @typedef {SlideData[]} DataSourceArray */\r\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\r\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\r\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\r\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\r\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\r\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\r\n\r\n/**\r\n * @typedef {string | NodeListOf<HTMLElement> | HTMLElement[] | HTMLElement} ElementProvider\r\n */\r\n\r\n/** @typedef {Partial<PreparedPhotoSwipeOptions>} PhotoSwipeOptions https://photoswipe.com/options/ */\r\n/**\r\n * @typedef {Object} PreparedPhotoSwipeOptions\r\n *\r\n * @prop {DataSource} [dataSource]\r\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\r\n * (which may be modified further from numItems event).\r\n *\r\n * Each item should contain data that you need to generate slide\r\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\r\n *\r\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\r\n *\r\n * @prop {number} bgOpacity\r\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\r\n *\r\n * @prop {number} spacing\r\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\r\n *\r\n * @prop {boolean} allowPanToNext\r\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\r\n *\r\n * @prop {boolean} loop\r\n * If set to true you'll be able to swipe from the last to the first image.\r\n * Option is always false when there are less than 3 slides.\r\n *\r\n * @prop {boolean} [wheelToZoom]\r\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\r\n *\r\n * @prop {boolean} pinchToClose\r\n * Pinch touch gesture to close the gallery.\r\n *\r\n * @prop {boolean} closeOnVerticalDrag\r\n * Vertical drag gesture to close the PhotoSwipe.\r\n *\r\n * @prop {Padding} [padding]\r\n * Slide area padding (in pixels).\r\n *\r\n * @prop {(viewportSize: Point, itemData: SlideData, index: number) => Padding} [paddingFn]\r\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\r\n *\r\n * @prop {number | false} hideAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} showAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} zoomAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {string} easing\r\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\r\n *\r\n * @prop {boolean} escKey\r\n * Esc key to close.\r\n *\r\n * @prop {boolean} arrowKeys\r\n * Left/right arrow keys for navigation.\r\n *\r\n * @prop {boolean} trapFocus\r\n * Trap focus within PhotoSwipe element while it's open.\r\n *\r\n * @prop {boolean} returnFocus\r\n * Restore focus the last active element after PhotoSwipe is closed.\r\n *\r\n * @prop {boolean} clickToCloseNonZoomable\r\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\r\n *\r\n * @prop {ActionType | ActionFn | false} imageClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} bgClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} tapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} doubleTapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {number} preloaderDelay\r\n * Delay before the loading indicator will be displayed,\r\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\r\n *\r\n * @prop {string} indexIndicatorSep\r\n * Used for slide count indicator (\"1 of 10 \").\r\n *\r\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipeBase) => Point} [getViewportSizeFn]\r\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\r\n *\r\n * @prop {string} errorMsg\r\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\r\n *\r\n * @prop {[number, number]} preload\r\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\r\n * first one - number of items to preload before the current image, second one - after the current image.\r\n * Two nearby images are always loaded.\r\n *\r\n * @prop {string} [mainClass]\r\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\r\n * Example on Styling page.\r\n *\r\n * @prop {HTMLElement} [appendToEl]\r\n * Element to which PhotoSwipe dialog will be appended when it opens.\r\n *\r\n * @prop {number} maxWidthToAnimate\r\n * Maximum width of image to animate, if initial rendered image width\r\n * is larger than this value - the opening/closing transition will be automatically disabled.\r\n *\r\n * @prop {string} [closeTitle]\r\n * Translating\r\n *\r\n * @prop {string} [zoomTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowNextTitle]\r\n * Translating\r\n *\r\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\r\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\r\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\r\n *\r\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\r\n *\r\n * @prop {number} index\r\n * Defines start slide index.\r\n *\r\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\r\n *\r\n * @prop {boolean} [arrowPrev]\r\n * @prop {boolean} [arrowNext]\r\n * @prop {boolean} [zoom]\r\n * @prop {boolean} [close]\r\n * @prop {boolean} [counter]\r\n *\r\n * @prop {string} [arrowPrevSVG]\r\n * @prop {string} [arrowNextSVG]\r\n * @prop {string} [zoomSVG]\r\n * @prop {string} [closeSVG]\r\n * @prop {string} [counterSVG]\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * @prop {string} [arrowNextTitle]\r\n * @prop {string} [zoomTitle]\r\n * @prop {string} [closeTitle]\r\n * @prop {string} [counterTitle]\r\n *\r\n * @prop {ZoomLevelOption} [initialZoomLevel]\r\n * @prop {ZoomLevelOption} [secondaryZoomLevel]\r\n * @prop {ZoomLevelOption} [maxZoomLevel]\r\n *\r\n * @prop {boolean} [mouseMovePan]\r\n * @prop {Point | null} [initialPointerPos]\r\n * @prop {boolean} [showHideOpacity]\r\n *\r\n * @prop {PhotoSwipeModuleOption} [pswpModule]\r\n * @prop {() => Promise<any>} [openPromise]\r\n * @prop {boolean} [preloadFirstSlide]\r\n * @prop {ElementProvider} [gallery]\r\n * @prop {string} [gallerySelector]\r\n * @prop {ElementProvider} [children]\r\n * @prop {string} [childSelector]\r\n * @prop {string | false} [thumbSelector]\r\n */\r\n\r\n/** @type {PreparedPhotoSwipeOptions} */\r\nconst defaultOptions = {\r\n  allowPanToNext: true,\r\n  spacing: 0.1,\r\n  loop: true,\r\n  pinchToClose: true,\r\n  closeOnVerticalDrag: true,\r\n  hideAnimationDuration: 333,\r\n  showAnimationDuration: 333,\r\n  zoomAnimationDuration: 333,\r\n  escKey: true,\r\n  arrowKeys: true,\r\n  trapFocus: true,\r\n  returnFocus: true,\r\n  maxWidthToAnimate: 4000,\r\n  clickToCloseNonZoomable: true,\r\n  imageClickAction: 'zoom-or-close',\r\n  bgClickAction: 'close',\r\n  tapAction: 'toggle-controls',\r\n  doubleTapAction: 'zoom',\r\n  indexIndicatorSep: ' / ',\r\n  preloaderDelay: 2000,\r\n  bgOpacity: 0.8,\r\n\r\n  index: 0,\r\n  errorMsg: 'The image cannot be loaded',\r\n  preload: [1, 2],\r\n  easing: 'cubic-bezier(.4,0,.22,1)'\r\n};\r\n\r\n/**\r\n * PhotoSwipe Core\r\n */\r\nclass PhotoSwipe extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.options = this._prepareOptions(options || {});\r\n\r\n    /**\r\n     * offset of viewport relative to document\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.offset = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * @type {Point}\r\n     * @private\r\n     */\r\n    this._prevViewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * Size of scrollable PhotoSwipe viewport\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.viewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * background (backdrop) opacity\r\n     */\r\n    this.bgOpacity = 1;\r\n    this.currIndex = 0;\r\n    this.potentialIndex = 0;\r\n    this.isOpen = false;\r\n    this.isDestroying = false;\r\n    this.hasMouse = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {SlideData}\r\n     */\r\n    this._initialItemData = {};\r\n    /** @type {Bounds | undefined} */\r\n    this._initialThumbBounds = undefined;\r\n\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.topBar = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.template = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.container = undefined;\r\n    /** @type {HTMLElement | undefined} */\r\n    this.scrollWrap = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.currSlide = undefined;\r\n\r\n    this.events = new DOMEvents();\r\n    this.animations = new Animations();\r\n    this.mainScroll = new MainScroll(this);\r\n    this.gestures = new Gestures(this);\r\n    this.opener = new Opener(this);\r\n    this.keyboard = new Keyboard(this);\r\n    this.contentLoader = new ContentLoader(this);\r\n  }\r\n\r\n  /** @returns {boolean} */\r\n  init() {\r\n    if (this.isOpen || this.isDestroying) {\r\n      return false;\r\n    }\r\n\r\n    this.isOpen = true;\r\n    this.dispatch('init'); // legacy\r\n    this.dispatch('beforeOpen');\r\n\r\n    this._createMainStructure();\r\n\r\n    // add classes to the root element of PhotoSwipe\r\n    let rootClasses = 'pswp--open';\r\n    if (this.gestures.supportsTouch) {\r\n      rootClasses += ' pswp--touch';\r\n    }\r\n    if (this.options.mainClass) {\r\n      rootClasses += ' ' + this.options.mainClass;\r\n    }\r\n    if (this.element) {\r\n      this.element.className += ' ' + rootClasses;\r\n    }\r\n\r\n    this.currIndex = this.options.index || 0;\r\n    this.potentialIndex = this.currIndex;\r\n    this.dispatch('firstUpdate'); // starting index can be modified here\r\n\r\n    // initialize scroll wheel handler to block the scroll\r\n    this.scrollWheel = new ScrollWheel(this);\r\n\r\n    // sanitize index\r\n    if (Number.isNaN(this.currIndex)\r\n        || this.currIndex < 0\r\n        || this.currIndex >= this.getNumItems()) {\r\n      this.currIndex = 0;\r\n    }\r\n\r\n    if (!this.gestures.supportsTouch) {\r\n      // enable mouse features if no touch support detected\r\n      this.mouseDetected();\r\n    }\r\n\r\n    // causes forced synchronous layout\r\n    this.updateSize();\r\n\r\n    this.offset.y = window.pageYOffset;\r\n\r\n    this._initialItemData = this.getItemData(this.currIndex);\r\n    this.dispatch('gettingData', {\r\n      index: this.currIndex,\r\n      data: this._initialItemData,\r\n      slide: undefined\r\n    });\r\n\r\n    // *Layout* - calculate size and position of elements here\r\n    this._initialThumbBounds = this.getThumbBounds();\r\n    this.dispatch('initialLayout');\r\n\r\n    this.on('openingAnimationEnd', () => {\r\n      const { itemHolders } = this.mainScroll;\r\n\r\n      // Add content to the previous and next slide\r\n      if (itemHolders[0]) {\r\n        itemHolders[0].el.style.display = 'block';\r\n        this.setContent(itemHolders[0], this.currIndex - 1);\r\n      }\r\n      if (itemHolders[2]) {\r\n        itemHolders[2].el.style.display = 'block';\r\n        this.setContent(itemHolders[2], this.currIndex + 1);\r\n      }\r\n\r\n      this.appendHeavy();\r\n\r\n      this.contentLoader.updateLazy();\r\n\r\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\r\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\r\n      this.dispatch('bindEvents');\r\n    });\r\n\r\n    // set content for center slide (first time)\r\n    if (this.mainScroll.itemHolders[1]) {\r\n      this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\r\n    }\r\n    this.dispatch('change');\r\n\r\n    this.opener.open();\r\n\r\n    this.dispatch('afterInit');\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get looped slide index\r\n   * (for example, -1 will return the last slide)\r\n   *\r\n   * @param {number} index\r\n   * @returns {number}\r\n   */\r\n  getLoopedIndex(index) {\r\n    const numSlides = this.getNumItems();\r\n\r\n    if (this.options.loop) {\r\n      if (index > numSlides - 1) {\r\n        index -= numSlides;\r\n      }\r\n\r\n      if (index < 0) {\r\n        index += numSlides;\r\n      }\r\n    }\r\n\r\n    return clamp(index, 0, numSlides - 1);\r\n  }\r\n\r\n  appendHeavy() {\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.appendHeavy();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change the slide\r\n   * @param {number} index New index\r\n   */\r\n  goTo(index) {\r\n    this.mainScroll.moveIndexBy(\r\n      this.getLoopedIndex(index) - this.potentialIndex\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Go to the next slide.\r\n   */\r\n  next() {\r\n    this.goTo(this.potentialIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Go to the previous slide.\r\n   */\r\n  prev() {\r\n    this.goTo(this.potentialIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js zoomTo\r\n   *\r\n   * @param {Parameters<Slide['zoomTo']>} args\r\n   */\r\n  zoomTo(...args) {\r\n    this.currSlide?.zoomTo(...args);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js toggleZoom\r\n   */\r\n  toggleZoom() {\r\n    this.currSlide?.toggleZoom();\r\n  }\r\n\r\n  /**\r\n   * Close the gallery.\r\n   * After closing transition ends - destroy it\r\n   */\r\n  close() {\r\n    if (!this.opener.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isDestroying = true;\r\n\r\n    this.dispatch('close');\r\n\r\n    this.events.removeAll();\r\n    this.opener.close();\r\n  }\r\n\r\n  /**\r\n   * Destroys the gallery:\r\n   * - instantly closes the gallery\r\n   * - unbinds events,\r\n   * - cleans intervals and timeouts\r\n   * - removes elements from DOM\r\n   */\r\n  destroy() {\r\n    if (!this.isDestroying) {\r\n      this.options.showHideAnimationType = 'none';\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    this.dispatch('destroy');\r\n\r\n    this._listeners = {};\r\n\r\n    if (this.scrollWrap) {\r\n      this.scrollWrap.ontouchmove = null;\r\n      this.scrollWrap.ontouchend = null;\r\n    }\r\n\r\n    this.element?.remove();\r\n\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.destroy();\r\n    });\r\n\r\n    this.contentLoader.destroy();\r\n    this.events.removeAll();\r\n  }\r\n\r\n  /**\r\n   * Refresh/reload content of a slide by its index\r\n   *\r\n   * @param {number} slideIndex\r\n   */\r\n  refreshSlideContent(slideIndex) {\r\n    this.contentLoader.removeByIndex(slideIndex);\r\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\r\n      let potentialHolderIndex = (this.currSlide?.index ?? 0) - 1 + i;\r\n      if (this.canLoop()) {\r\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\r\n      }\r\n      if (potentialHolderIndex === slideIndex) {\r\n        // set the new slide content\r\n        this.setContent(itemHolder, slideIndex, true);\r\n\r\n        // activate the new slide if it's current\r\n        if (i === 1) {\r\n          this.currSlide = itemHolder.slide;\r\n          itemHolder.slide?.setIsActive(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dispatch('change');\r\n  }\r\n\r\n\r\n  /**\r\n   * Set slide content\r\n   *\r\n   * @param {ItemHolder} holder mainScroll.itemHolders array item\r\n   * @param {number} index Slide index\r\n   * @param {boolean} [force] If content should be set even if index wasn't changed\r\n   */\r\n  setContent(holder, index, force) {\r\n    if (this.canLoop()) {\r\n      index = this.getLoopedIndex(index);\r\n    }\r\n\r\n    if (holder.slide) {\r\n      if (holder.slide.index === index && !force) {\r\n        // exit if holder already contains this slide\r\n        // this could be common when just three slides are used\r\n        return;\r\n      }\r\n\r\n      // destroy previous slide\r\n      holder.slide.destroy();\r\n      holder.slide = undefined;\r\n    }\r\n\r\n    // exit if no loop and index is out of bounds\r\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\r\n      return;\r\n    }\r\n\r\n    const itemData = this.getItemData(index);\r\n    holder.slide = new Slide(itemData, index, this);\r\n\r\n    // set current slide\r\n    if (index === this.currIndex) {\r\n      this.currSlide = holder.slide;\r\n    }\r\n\r\n    holder.slide.append(holder.el);\r\n  }\r\n\r\n  /** @returns {Point} */\r\n  getViewportCenterPoint() {\r\n    return {\r\n      x: this.viewportSize.x / 2,\r\n      y: this.viewportSize.y / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update size of all elements.\r\n   * Executed on init and on page resize.\r\n   *\r\n   * @param {boolean} [force] Update size even if size of viewport was not changed.\r\n   */\r\n  updateSize(force) {\r\n    // let item;\r\n    // let itemIndex;\r\n\r\n    if (this.isDestroying) {\r\n      // exit if PhotoSwipe is closed or closing\r\n      // (to avoid errors, as resize event might be delayed)\r\n      return;\r\n    }\r\n\r\n    //const newWidth = this.scrollWrap.clientWidth;\r\n    //const newHeight = this.scrollWrap.clientHeight;\r\n\r\n    const newViewportSize = getViewportSize(this.options, this);\r\n\r\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\r\n      // Exit if dimensions were not changed\r\n      return;\r\n    }\r\n\r\n    //this._prevViewportSize.x = newWidth;\r\n    //this._prevViewportSize.y = newHeight;\r\n    equalizePoints(this._prevViewportSize, newViewportSize);\r\n\r\n    this.dispatch('beforeResize');\r\n\r\n    equalizePoints(this.viewportSize, this._prevViewportSize);\r\n\r\n    this._updatePageScrollOffset();\r\n\r\n    this.dispatch('viewportSize');\r\n\r\n    // Resize slides only after opener animation is finished\r\n    // and don't re-calculate size on inital size update\r\n    this.mainScroll.resize(this.opener.isOpen);\r\n\r\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\r\n      this.mouseDetected();\r\n    }\r\n\r\n    this.dispatch('resize');\r\n  }\r\n\r\n  /**\r\n   * @param {number} opacity\r\n   */\r\n  applyBgOpacity(opacity) {\r\n    this.bgOpacity = Math.max(opacity, 0);\r\n    if (this.bg) {\r\n      this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether mouse is detected\r\n   */\r\n  mouseDetected() {\r\n    if (!this.hasMouse) {\r\n      this.hasMouse = true;\r\n      this.element?.classList.add('pswp--has_mouse');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page resize event handler\r\n   *\r\n   * @private\r\n   */\r\n  _handlePageResize() {\r\n    this.updateSize();\r\n\r\n    // In iOS webview, if element size depends on document size,\r\n    // it'll be measured incorrectly in resize event\r\n    //\r\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\r\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\r\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\r\n      setTimeout(() => {\r\n        this.updateSize();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page scroll offset is used\r\n   * to get correct coordinates\r\n   * relative to PhotoSwipe viewport.\r\n   *\r\n   * @private\r\n   */\r\n  _updatePageScrollOffset() {\r\n    this.setScrollOffset(0, window.pageYOffset);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  setScrollOffset(x, y) {\r\n    this.offset.x = x;\r\n    this.offset.y = y;\r\n    this.dispatch('updateScrollOffset');\r\n  }\r\n\r\n  /**\r\n   * Create main HTML structure of PhotoSwipe,\r\n   * and add it to DOM\r\n   *\r\n   * @private\r\n   */\r\n  _createMainStructure() {\r\n    // root DOM element of PhotoSwipe (.pswp)\r\n    this.element = createElement('pswp', 'div');\r\n    this.element.setAttribute('tabindex', '-1');\r\n    this.element.setAttribute('role', 'dialog');\r\n\r\n    // template is legacy prop\r\n    this.template = this.element;\r\n\r\n    // Background is added as a separate element,\r\n    // as animating opacity is faster than animating rgba()\r\n    this.bg = createElement('pswp__bg', 'div', this.element);\r\n    this.scrollWrap = createElement('pswp__scroll-wrap', 'section', this.element);\r\n    this.container = createElement('pswp__container', 'div', this.scrollWrap);\r\n\r\n    // aria pattern: carousel\r\n    this.scrollWrap.setAttribute('aria-roledescription', 'carousel');\r\n    this.container.setAttribute('aria-live', 'off');\r\n    this.container.setAttribute('id', 'pswp__items');\r\n\r\n    this.mainScroll.appendHolders();\r\n\r\n    this.ui = new UI(this);\r\n    this.ui.init();\r\n\r\n    // append to DOM\r\n    (this.options.appendToEl || document.body).appendChild(this.element);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get position and dimensions of small thumbnail\r\n   *   {x:,y:,w:}\r\n   *\r\n   * Height is optional (calculated based on the large image)\r\n   *\r\n   * @returns {Bounds | undefined}\r\n   */\r\n  getThumbBounds() {\r\n    return getThumbBounds(\r\n      this.currIndex,\r\n      this.currSlide ? this.currSlide.data : this._initialItemData,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * If the PhotoSwipe can have continuous loop\r\n   * @returns Boolean\r\n   */\r\n  canLoop() {\r\n    return (this.options.loop && this.getNumItems() > 2);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PhotoSwipeOptions} options\r\n   * @returns {PreparedPhotoSwipeOptions}\r\n   */\r\n  _prepareOptions(options) {\r\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\r\n      options.showHideAnimationType = 'none';\r\n      options.zoomAnimationDuration = 0;\r\n    }\r\n\r\n    /** @type {PreparedPhotoSwipeOptions} */\r\n    return {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n  }\r\n}\r\n\r\nexport default PhotoSwipe;\r\n","/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  specialKeyUsed,\r\n  getElementsFromOption,\r\n  isPswpClass\r\n} from '../util/util.js';\r\n\r\nimport PhotoSwipeBase from '../core/base.js';\r\nimport { lazyLoadSlide } from '../slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n    this.shouldOpen = false;\r\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\r\n    this._preloadedContent = undefined;\r\n\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp) { // ... if PhotoSwipe is already open\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not the ideal way to detect them.\r\n    //\r\n    /** @type {Point | null} */\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    /** @type {DataSource} */\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp || !this.options) {\r\n      return false;\r\n    }\r\n\r\n    // Use the first gallery element if dataSource is not provided\r\n    if (!dataSource && this.options.gallery && this.options.children) {\r\n      const galleryElements = getElementsFromOption(this.options.gallery);\r\n      if (galleryElements[0]) {\r\n        dataSource = {\r\n          gallery: galleryElements[0]\r\n        };\r\n      }\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name]?.forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name]?.forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = undefined;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = undefined;\r\n      delete window.pswp;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    this.pswp?.destroy();\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = {};\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeLightbox;\r\n","import { ModelAttributes } from './galleries/AbstractGallery';\n\nexport declare interface ItemOptions {\n    lightbox?: boolean;\n    selectable?: boolean;\n    activable?: boolean;\n    gap?: number;\n    showLabels?: 'hover' | 'never' | 'always';\n}\n\nexport interface ItemTitle {\n    title: string;\n    link: string;\n    linkTarget: '_blank' | '_self' | '_parent' | '_top';\n}\n\nexport type ItemActivateEventDetail<Model extends ModelAttributes> = {\n    clickEvent: MouseEvent;\n    item: Item<Model>\n};\n\nexport class Item<Model extends ModelAttributes> {\n\n    /**\n     * Cleaned title, used for label / button\n     */\n    public readonly title: string;\n\n    /**\n     * Actual row index in the list\n     */\n    private _row!: number;\n\n    /**\n     * If is actually the last element of a row\n     */\n    private _last!: boolean;\n\n    /**\n     * Computed size (real used size)\n     */\n    private _width!: number;\n    private _height!: number;\n\n    private _cropped = true;\n\n    /**\n     * Wherever item is selected or not\n     * @type {boolean}\n     * @private\n     */\n    private _selected = false;\n\n    /**\n     * Item root element reference (figure)\n     */\n    private _element!: HTMLElement;\n\n    /**\n     * Image container reference (child div, containing the image)\n     */\n    private _image!: HTMLElement;\n\n    /**\n     * Reference to the select button\n     */\n    private _selectBtn!: HTMLElement;\n\n    /**\n     * Element referering the \"button\" containing the label\n     */\n    private label: HTMLElement | null = null;\n\n    /**\n     *\n     * @param {ItemOptions} options\n     * @param model Contains the source data given for an item (e.g object instance from database with id etc..)\n     */\n    public constructor(\n        private readonly document: Document,\n        private readonly options: ItemOptions,\n        public readonly model: Model,\n    ) {\n        this.title = this.getTitleDetails(model.title);\n    }\n\n    /**\n     * Cleans html, and returns only the text from all eventual tags\n     * @param {string} term\n     * @returns {ItemTitle}\n     */\n    private getTitleDetails(term: string | undefined): string {\n        return term ? term.replace(/<(?!\\s*br\\s*\\/?)[^>]+>/gi, '') : '';\n    }\n\n    /**\n     * Create DOM elements according to element raw data (thumbnail and enlarged urls)\n     * Also apply border-radius at this level because it never changed threw time\n     */\n    public init(): HTMLElement {\n        let showLabel = false;\n\n        // Test if label should be added to dom\n        const showLabelValues = ['always', 'hover'];\n        if (this.title && this.options.showLabels && showLabelValues.includes(this.options.showLabels)) {\n            showLabel = true;\n        }\n\n        const element = this.document.createElement('a') as HTMLElement;\n        let image: HTMLElement = this.document.createElement('img');\n        const link = this.getLinkElement();\n        let zoomable: HTMLElement | null = null;\n\n        // Activation is listened on label/button or on whole image if lightbox is off.\n        // If label is not a button, it becomes a button\n        let activable: HTMLElement | null = null;\n\n        if (this.options.lightbox && showLabel && link) {\n            this.label = link;\n            this.label.classList.add('button');\n            zoomable = image;\n            activable = link;\n\n        } else if (this.options.lightbox && showLabel && !link) {\n            this.label = this.document.createElement('div');\n\n            if (this.options.activable) {\n                activable = this.label;\n                this.label.classList.add('button');\n                zoomable = image;\n            } else {\n                zoomable = element;\n            }\n\n        } else if (this.options.lightbox && !showLabel) {\n            // Actually, lightbox has priority on the link that is ignored...\n            zoomable = element;\n\n            // May be dangerous to consider image as activation, because opening the lightbox is already an action and we could have two...\n            // It's ok if activate event is used for tracking, but not if it's used to do an action.\n            // In the doubt, for now it's not allowed\n            // activable = element;\n\n        } else if (!this.options.lightbox && showLabel && link) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            image = this.getLinkElement()!;\n            this.label = link;\n            this.label.classList.add('button');\n            activable = element;\n\n        } else if (!this.options.lightbox && showLabel && !link) {\n            this.label = this.document.createElement('div');\n            if (this.options.activable) {\n                activable = element;\n                this.label.classList.add('button');\n            }\n\n        } else if (!this.options.lightbox && !showLabel && link) {\n            image = link;\n            activable = link;\n        }\n\n        if (zoomable) {\n            zoomable.classList.add('zoomable');\n\n            zoomable.addEventListener('click', () => {\n                const event = new CustomEvent<Item<Model>>('zoom', {detail: this});\n                this._element.dispatchEvent(event);\n            });\n        }\n\n        if (activable) {\n            activable.classList.add('activable');\n            activable.addEventListener('click', (ev) => {\n                const data: ItemActivateEventDetail<Model> = {\n                    item: this,\n                    clickEvent: ev,\n                };\n                const activableEvent = new CustomEvent<ItemActivateEventDetail<Model>>('activate', {detail: data});\n                this._element.dispatchEvent(activableEvent);\n            });\n        }\n\n        image.style.backgroundSize = this.model.backgroundSize || 'cover';\n        image.style.backgroundPosition = this.model.backgroundPosition || 'center';\n\n        image.classList.add('image');\n        element.classList.add('figure');\n        element.appendChild(image);\n\n        if (this.model.color) {\n            element.style.backgroundColor = this.model.color + '11';\n        }\n\n        this._element = element;\n        this._image = image;\n\n        if (this.label) {\n            this.label.innerHTML = this.title;\n            this.label.classList.add('title');\n            if (this.options.showLabels === 'hover') {\n                this.label.classList.add('hover');\n            }\n            element.appendChild(this.label);\n        }\n\n        if (this.options.selectable) {\n            if (this.model.selected) {\n                this.select();\n            }\n            this._selectBtn = this.document.createElement('div');\n            this._selectBtn.classList.add('selectBtn');\n            const marker = this.document.createElement('div');\n            marker.classList.add('marker');\n            this._selectBtn.appendChild(marker);\n            this._selectBtn.addEventListener('click', (e) => {\n                e.stopPropagation();\n                this.toggleSelect();\n                const event = new CustomEvent<Item<Model>>('select', {detail: this});\n                this._element.dispatchEvent(event);\n            });\n            this._element.appendChild(this._selectBtn);\n        }\n\n        this.style();\n\n        return element;\n    }\n\n    public setLabelHover(activate: boolean): void {\n        if (activate) {\n            this.options.showLabels = 'hover';\n            this.label?.classList.add('hover');\n        } else {\n            this.options.showLabels = 'always';\n            this.label?.classList.remove('hover');\n        }\n    }\n\n    /**\n     * Use computed (organized) data to apply style (size and margin) to elements on DOM\n     * Does not apply border-radius because is used to restyle data on browser resize, and border-radius don't change.\n     */\n    public style(): void {\n\n        if (!this._element) {\n            return;\n        }\n\n        this._element.style.width = String(this.width + 'px');\n        this._element.style.height = String(this.height + 'px');\n        this._element.style.marginBottom = String(this.options.gap + 'px');\n\n        if (this.last) {\n            this._element.style.marginRight = '0';\n        } else {\n            this._element.style.marginRight = String(this.options.gap + 'px');\n        }\n    }\n\n    /**\n     * This function prepare loaded/loading status and return root element.\n     * @returns {HTMLElement}\n     */\n    public loadImage(): void {\n\n        this._image.setAttribute('src', this.model.thumbnailSrc);\n        this._image.setAttribute('alt', this.model.title || '');\n\n        this._image.addEventListener('load', () => {\n            this._element.classList.add('loaded');\n        });\n\n        // Detect errored images and hide them smartly\n        this._image.addEventListener('error', () => {\n            this._element.classList.add('errored');\n        });\n    }\n\n    public toggleSelect(): void {\n        if (this._selected) {\n            this.unselect();\n        } else {\n            this.select();\n        }\n    }\n\n    public select(): void {\n        this._selected = true;\n        this._element.classList.add('selected');\n    }\n\n    public unselect(): void {\n        this._selected = false;\n        this._element.classList.remove('selected');\n    }\n\n    private getLinkElement(): HTMLElement | null {\n\n        if (this.model.link) {\n            const link = this.document.createElement('a');\n            link.setAttribute('href', this.model.link);\n            link.classList.add('link');\n            if (this.model.linkTarget) {\n                link.setAttribute('target', this.model.linkTarget);\n            }\n\n            return link;\n        }\n\n        return null;\n    }\n\n    public remove(): void {\n        if (this._element.parentNode) {\n            this._element.parentNode.removeChild(this._element);\n        }\n    }\n\n    get last(): boolean {\n        return this._last;\n    }\n\n    set last(value: boolean) {\n        this._last = value;\n    }\n\n    get row(): number {\n        return this._row;\n    }\n\n    set row(value: number) {\n        this._row = value;\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    set height(value: number) {\n        this._height = value;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    set width(value: number) {\n        this._width = value;\n    }\n\n    get cropped(): boolean {\n        return this._cropped;\n    }\n\n    set cropped(value: boolean) {\n        this._cropped = value;\n    }\n\n    get enlargedWidth(): number {\n        return this.model.enlargedWidth;\n    }\n\n    get enlargedHeight(): number {\n        return this.model.enlargedHeight;\n    }\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n}\n","import {SizedModel} from './galleries/AbstractGallery';\n\ninterface ImageRatioInfo {\n    ratio: number;\n    cropped: boolean;\n}\n\nexport interface RatioLimits {\n    min?: number;\n    max?: number;\n}\n\nexport function getIcon(document: Document, name: string): SVGSVGElement {\n    // Here we cannot use `SVGSVGElement.innerHTML`, because it is not available in SSR.\n    // So instead we use `HTMLDivElement.innerHTML`, and get the SVG inside that div.\n    // see: https://github.com/fgnass/domino/blob/12a5f67136a0ac10e3fa1649b8787ba3b309e9a7/lib/Element.js#L95\n    const div = document.createElement('div');\n    div.innerHTML = '<svg viewBox=\"0 0 100 100\"><use xlink:href=\"#' + name + '\"></use></svg>';\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return div.querySelector('svg')!;\n}\n\nexport function getImageRatio(model: SizedModel, ratioLimits?: RatioLimits): number {\n    let ratio = Number(model.enlargedWidth) / Number(model.enlargedHeight);\n\n    if (ratioLimits) {\n        if (ratioLimits.min && ratio < ratioLimits.min) {\n            ratio = ratioLimits.min;\n        } else if (ratioLimits.max && ratio > ratioLimits.max) {\n            ratio = ratioLimits.max;\n        }\n    }\n\n    return ratio;\n}\n\nexport function getImageRatioAndIfCropped(model: SizedModel, ratioLimits?: RatioLimits): ImageRatioInfo {\n    let ratio = Number(model.enlargedWidth) / Number(model.enlargedHeight);\n    let cropped = false;\n\n    if (ratioLimits) {\n        if (ratioLimits.min && ratio < ratioLimits.min) {\n            ratio = ratioLimits.min;\n            cropped = true;\n        } else if (ratioLimits.max && ratio > ratioLimits.max) {\n            ratio = ratioLimits.max;\n            cropped = true;\n        }\n    }\n\n    return { ratio: ratio, cropped: cropped };\n}\n","import { debounce, defaultsDeep, pick } from 'lodash-es';\n\nimport PhotoSwipe, { PhotoSwipeOptions, SlideData } from 'photoswipe';\nimport PhotoSwipeLightbox from 'photoswipe/lightbox';\n\nimport 'photoswipe/dist/photoswipe.css';\n\nimport { Item, ItemActivateEventDetail, ItemOptions } from '../Item';\nimport { getIcon } from '../Utility';\n\n/**\n * A map of all possible event and the structure of their details\n */\nexport interface CustomEventDetailMap<T> {\n    'activate': { model: T, clickEvent: MouseEvent },\n    'item-added-to-dom': T,\n    'item-displayed': T,\n    'pagination': { offset: number, limit: number },\n    'select': T[],\n}\n\n/**\n * Augment the global namespace with our custom events\n * See: https://github.com/Microsoft/TypeScript/issues/28357\n */\ndeclare global {\n    interface HTMLElementEventMap {\n        activate: CustomEvent;\n        'item-added-to-dom': CustomEvent;\n        'item-displayed': CustomEvent;\n        pagination: CustomEvent;\n        select: CustomEvent;\n    }\n}\n\nexport interface SizedModel {\n\n    /**\n     * Height in pixels of the enlarged version the image\n     * If photoswipe is used, the size of the photoswipe enlarged image is required\n     * If photoswipe is not used, any size that match the ratio is enough\n     */\n    enlargedWidth: number;\n\n    /**\n     * Width in pixels of the enlarged version the image\n     * If photoswipe is used, the size of the photoswipe enlarged image is required\n     * If photoswipe is not used, any size that match the ratio is enough\n     */\n    enlargedHeight: number;\n}\n\nexport interface ModelAttributes extends SizedModel {\n\n    /**\n     * Source link for thumbnail image\n     */\n    thumbnailSrc: string;\n\n    /**\n     * Source link for enlarged (photoswipe) image\n     */\n    enlargedSrc?: string;\n\n    /**\n     * Label of item (or button)\n     */\n    title?: string;\n\n    /**\n     * Href link\n     */\n    link?: string;\n\n    /**\n     * a href target attribute\n     */\n    linkTarget?: '_blank' | '_self' | '_parent' | '_top';\n\n    /**\n     * Hex color\n     */\n    color?: string;\n\n    /**\n     * If item is selected\n     */\n    selected?: boolean;\n\n    /**\n     * Background size, default : cover\n     */\n    backgroundSize?: string;\n\n    /**\n     * Background position, default : center\n     */\n    backgroundPosition?: string;\n}\n\nexport interface GalleryOptions extends ItemOptions {\n    rowsPerPage?: number;\n    minRowsAtStart?: number;\n    infiniteScrollOffset?: number;\n    photoSwipeOptions?: PhotoSwipeOptions;\n    photoSwipePluginsInitFn?: ((lighbox: PhotoSwipeLightbox) => void) | null;\n    ssr?: {\n        /**\n         * In SSR mode, if the gallery width cannot be computed, it will fallback to this value\n         */\n        galleryWidth: number\n    }\n}\n\nexport abstract class AbstractGallery<Model extends ModelAttributes> {\n\n    /**\n     * Default options\n     */\n    protected options: Required<GalleryOptions> = {\n        gap: 3,\n        rowsPerPage: 0,\n        showLabels: 'hover',\n        lightbox: false,\n        minRowsAtStart: 2,\n        selectable: false,\n        activable: false,\n        infiniteScrollOffset: 0,\n        photoSwipeOptions: {\n            loop: false,\n        },\n        photoSwipePluginsInitFn: null,\n        ssr: {\n            galleryWidth: 480,\n        },\n    };\n\n    /**\n     * Images wrapper container\n     * If setted, serves as mark for \"initialized status\" of the gallery\n     */\n    protected bodyElementRef: HTMLElement | null = null;\n\n    /**\n     * Items for which container has been added to dom, but image has not been queries yet\n     */\n    protected scrollBufferedItems: Item<Model>[] = [];\n\n    /**\n     * Debounce function\n     * Runs a small delay after last image has been added to dom\n     * When it runs, images are loaded (appear with fade) and more images are queries to preserve a buffer of\n     * out-of-dom items\n     */\n    protected flushBufferedItems: () => void;\n\n    /**\n     * Number of items to query on buffer flushing\n     */\n    protected requiredItems = 0;\n\n    /**\n     * Used to test the scroll direction\n     * Avoid to load more images when scrolling up\n     */\n    private old_scroll_top = 0;\n\n    /**\n     * Stores page index that have been emmited\n     * Keeps a log of pages already asked to prevent to ask them multiple times\n     */\n    private requestedIndexesLog: number[] = [];\n\n\n    /**\n     * Reference to next button element\n     */\n    private nextButton: HTMLElement | null = null;\n    protected readonly document: Document;\n\n    /**\n     * PhotoSwipe Lightbox object\n     */\n    protected psLightbox: PhotoSwipeLightbox | null = null;\n\n    /**\n     * Get PhotoSwipe Lightbox\n     */\n    get photoSwipe(): PhotoSwipeLightbox | null {\n        return this.psLightbox;\n    }\n\n    /**\n     * Get currently selected PhotoSwipe image\n     */\n    get photoSwipeCurrentItem(): Model | null {\n        return this.collection[\n            this.psLightbox?.pswp?.currIndex || 0\n        ]?.model || null;\n    }\n\n    /**\n     *\n     * @param elementRef\n     * @param options\n     * @param scrollElementRef\n     */\n    constructor(protected elementRef: HTMLElement,\n        options: GalleryOptions,\n        protected scrollElementRef?: HTMLElement | null) {\n        this.document = this.elementRef.ownerDocument;\n        this.options = defaultsDeep(options, this.options);\n\n\n        // After having finished to add items to dom, show images inside containers and emit updated pagination\n        this.flushBufferedItems = debounce(() => {\n\n            this.scrollBufferedItems.forEach(i => {\n                i.loadImage();\n                this.dispatchEvent('item-displayed', i.model);\n            });\n\n            this.scrollBufferedItems = [];\n\n            if (!this.requiredItems) {\n                return;\n            }\n\n            // Each time a pagination event is emitted, the offset is logged and then verified to be sure to not ask it\n            // twice. That would cause duplicated entries and probably empty buffer with smaller pages. That could\n            // cause infinite loading until the end of the gallery\n            if (this.requestedIndexesLog.indexOf(this.collection.length) < 0) {\n                const offset = this.collection.length;\n                this.dispatchEvent('pagination', { offset, limit: this.requiredItems });\n                this.requestedIndexesLog.push(offset);\n                this.requiredItems = 0;\n            }\n\n        }, 500, { leading: false, trailing: true });\n\n    }\n\n    /**\n     * Complete collection of images\n     * @type {Array}\n     */\n    protected _collection: Item<Model>[] = [];\n\n    get collection(): Item<Model>[] {\n        return this._collection;\n    }\n\n    /**\n     * Partial set of items that represent the visible items\n     * @type {Item[]}\n     * @private\n     */\n    protected _domCollection: Item<Model>[] = [];\n\n    get domCollection(): Item<Model>[] {\n        return this._domCollection;\n    }\n\n    get selectedItems(): Model[] {\n        return this.domCollection.filter((item) => item.selected).map(item => item.model);\n    }\n\n    get width(): number {\n\n        // elementRef.clientWidth rounds ceil, we need round floor to grant computing fits in the available space\n        // elementRef.getBoundingClientRect().width doesn't round, so we can round floor.\n        return Math.floor(this.elementRef.getBoundingClientRect?.().width ?? this.options.ssr.galleryWidth);\n    }\n\n    get collectionLength(): number {\n        return this.collection.length;\n    }\n\n    get domCollectionLength(): number {\n        return this.domCollection.length;\n    }\n\n    /**\n     * Initializes DOM manipulations\n     */\n    public init(): void {\n\n        this.elementRef.classList.add('natural-gallery-js');\n\n        // Next button\n        this.nextButton = this.document.createElement('div');\n        this.nextButton.classList.add('natural-gallery-next');\n        this.nextButton.appendChild(getIcon(this.document, 'natural-gallery-icon-next'));\n        this.nextButton.style.display = 'none';\n        this.nextButton.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.onPageAdd();\n        });\n\n        this.bodyElementRef = this.document.createElement('div');\n        this.bodyElementRef.classList.add('natural-gallery-body');\n        this.extendToFreeViewport();\n\n        // Iframe\n        const iframe = this.document.createElement('iframe');\n        this.elementRef.appendChild(iframe);\n\n        // Resize debounce\n        const resizeDebounceDuration = 500;\n        const startResize = debounce(() => this.startResize(), resizeDebounceDuration, {\n            leading: true,\n            trailing: false,\n        });\n        const endResize = debounce(() => this.endResize(), resizeDebounceDuration, { leading: false, trailing: true });\n        iframe.contentWindow?.addEventListener('resize', () => {\n            endResize();\n            startResize();\n        });\n\n        this.elementRef.appendChild(this.bodyElementRef);\n        this.elementRef.appendChild(this.nextButton);\n\n        if (!this.options.rowsPerPage) {\n            this.bindScroll(this.scrollElementRef || this.document);\n        }\n\n        this.initItems();\n\n        if (this.options.lightbox) this.photoSwipeInit();\n    }\n\n    /**\n     * Initializes PhotoSwipe\n     */\n    protected photoSwipeInit() {\n        this.psLightbox = new PhotoSwipeLightbox({\n            ...this.options.photoSwipeOptions,\n            pswpModule: PhotoSwipe,\n        });\n\n        this.psLightbox.addFilter('numItems', (): number => {\n            return this.domCollection.length;\n            // return this.collection.length;\n        });\n\n        this.psLightbox.addFilter('itemData', (_itemData: SlideData, index: number): SlideData => {\n            const item = this.collection[index];\n            return {\n                id: index,\n                src: item.model.enlargedSrc,\n                w: item.model.enlargedWidth,\n                h: item.model.enlargedHeight,\n                msrc: item.model.thumbnailSrc,\n                element: item.element,\n                thumbCropped: item.cropped,\n            };\n        });\n\n        if (this.options.photoSwipePluginsInitFn) {\n            this.options.photoSwipePluginsInitFn(this.psLightbox);\n        }\n\n        this.psLightbox.init();\n\n        // Loading one more page when going to next image\n        this.psLightbox.on('change', () => {\n            // Positive delta means next slide.\n            // If we go next slide, and current index is out of visible collection bound, load more items\n            if (this.psLightbox?.pswp && (this.psLightbox.pswp.currIndex > (this.domCollection.length - 10))) {\n                this.onPageAdd();\n            }\n        });\n\n    }\n\n    public addItemToPhotoSwipeCollection(item: Item<Model>) {\n        const photoSwipeId = this.domCollection.length - 1;\n\n        item.element.addEventListener('zoom', () => {\n            this.psLightbox?.loadAndOpen(photoSwipeId);\n        });\n    }\n\n    /**\n     * Add items to collection\n     * Transform given list of models into inner Items\n     * @param models list of models\n     */\n    public addItems(models: Model[]): void {\n\n        // Accept only tables\n        if (!(models.constructor === Array && models.length)) {\n            return;\n        }\n\n        // Display newly added images if it's the first addition or if all images are already shown\n        const addToDom = this.collection.length === this.domCollection.length;\n        const collectionSize = this.collection.length;\n\n        // Complete collection\n        models.forEach((model: Model) => {\n            const itemOptions = pick(this.options, ['lightbox', 'selectable', 'activable', 'gap', 'showLabels']);\n            const item = new Item<Model>(this.document, itemOptions, model);\n            this._collection.push(item);\n        });\n\n        if (addToDom && collectionSize === 0 && this.bodyElementRef) {\n            // First initialization : collection size is 0\n            this.onPageAdd();\n        } else if (addToDom && collectionSize > 0 && this.bodyElementRef) {\n            // Gallery collection completion (after first initialization) : collection size > 0\n            this.onScroll();\n        }\n    }\n\n    public setLabelHover(activate: boolean):void {\n        this.options.showLabels = activate ? 'hover' : 'always';\n        this.collection.forEach(item => {\n            item.setLabelHover(activate);\n        });\n    }\n\n    /**\n     * Select all items visible in the DOM\n     * Ignores buffered items\n     */\n    public selectVisibleItems(): Model[] {\n        this.domCollection.forEach((item) => item.select());\n        return this.selectedItems;\n    }\n\n    /**\n     * Unselect all selected elements\n     */\n    public unselectAllItems(): void {\n        this.domCollection.forEach((item) => item.unselect());\n    }\n\n    /**\n     * Allows to use the same approach and method name to listen as gallery events on DOM or on javascript gallery\n     * object\n     *\n     * Gallery requests items when it's instantiated. But user may subscribe after creation, so we need to request\n     * again if user subscribes by this function.\n     *\n     * @param name\n     * @param callback\n     * @param options An object that specifies characteristics about the event listener. The available options are, see\n     *     addEventListener official documentation\n     */\n    public addEventListener<K extends keyof CustomEventDetailMap<Model>>(name: K, callback: (evt: CustomEvent<CustomEventDetailMap<Model>[K]>) => void, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(name: keyof CustomEventDetailMap<Model>, callback: (evt: CustomEvent<CustomEventDetailMap<Model>[keyof CustomEventDetailMap<Model>]>) => void, options?: boolean | AddEventListenerOptions): void {\n        this.elementRef.addEventListener(name, callback, options);\n\n        if (name === 'pagination' && this.bodyElementRef) {\n            this.requestItems();\n        }\n    }\n\n    /**\n     * Public api for empty function\n     * Emits a pagination event\n     */\n    public clear(): void {\n        this.empty();\n        this.requestItems();\n    }\n\n    /**\n     * Return copy of options to prevent modification\n     */\n    public getOptions(): GalleryOptions {\n        return this.options;\n    }\n\n    /**\n     * Override current collection\n     * @param {Item[]} items\n     */\n    public setItems(items: Model[]): void {\n        this.empty();\n        this.addItems(items);\n    }\n\n    /**\n     *\n     */\n    public abstract organizeItems(items: Item<Model>[], fromRow?: number, toRow?: number): void;\n\n    /**\n     * If gallery already has items on initialisation, set first page visible, load second page and query for more\n     * items if needed.\n     * If not, just query for items\n     */\n    protected initItems(): void {\n\n        if (!this.collection.length) {\n            this.requestItems();\n            return;\n        }\n\n        const rowsPerPage = this.getEstimatedRowsPerPage();\n        const itemsPerRow = this.getEstimatedColumnsPerRow();\n        const pageSize = rowsPerPage * itemsPerRow;\n\n        // Add items\n        const itemsToAdd = this.collection.slice(0, pageSize);\n        this.organizeItems(itemsToAdd, 0, rowsPerPage);\n        itemsToAdd.forEach(item => this.addItemToDOM(item));\n        this.scrollBufferedItems = itemsToAdd;\n\n        // Prepare second page\n        const bufferedItems = this.collection.slice(this.domCollection.length);\n        const missing = bufferedItems.length - pageSize;\n        this.requiredItems = Math.min(missing, bufferedItems.length, 0);\n\n        // Load images\n        this.flushBufferedItems();\n        this.updateNextButtonVisibility();\n    }\n\n    /**\n     *\n     */\n    protected abstract getEstimatedColumnsPerRow(): number;\n\n    /**\n     * AbstractRowGallery + Masonry\n     */\n    protected abstract onScroll(): void;\n\n    /**\n     * AbstractRowGallery + Masonry\n     */\n    protected abstract onPageAdd(): void;\n\n    /**\n     * Return number of rows to show per page to fill the empty space until the bottom of the screen\n     * Should grant all the space is used or more, but not less.\n     * @returns {number}\n     */\n    protected abstract getEstimatedRowsPerPage(): number;\n\n    /**\n     * Fire pagination event\n     * Information provided in the event allows to retrieve items from the server using given data :\n     * \"offset\" and \"limit\" that have the same semantic that respective attributes in mySQL.\n     *\n     * The gallery asks for items it needs, including some buffer items that are not displayed when given but are\n     * available to be added immediately to DOM when user scrolls.\n     *\n     */\n    protected requestItems(): void {\n        const estimatedPerRow = this.getEstimatedColumnsPerRow();\n\n        // +1 because we have to get more than what is used under onPageAdd().\n        // Without +1 all items are always added to DOM and gallery will loop load until end of collection\n        const limit = estimatedPerRow * this.getRowsPerPage() + 1;\n        this.dispatchEvent('pagination', { offset: this.collection.length, limit: limit });\n    }\n\n    /**\n     * Returns option.rowsPerPage is specified.\n     * If not returns the estimated number of rows to fill the rest of the vertical space in the screen\n     * @returns {number}\n     */\n    protected getRowsPerPage(): number {\n        if (this.options.rowsPerPage > 0) {\n            return this.options.rowsPerPage;\n        }\n\n        const estimation = this.getEstimatedRowsPerPage();\n        return estimation < this.options.minRowsAtStart ? this.options.minRowsAtStart : estimation;\n    }\n\n    /**\n     * Add given item to DOM and to domCollection\n     * @param {Item} item\n     * @param destination\n     */\n    protected addItemToDOM(item: Item<Model>, destination: HTMLElement | null = this.bodyElementRef): void {\n        if (!destination) {\n            throw new Error('Gallery not initialized');\n        }\n\n        this.domCollection.push(item);\n\n        destination.appendChild(item.init());\n\n        this.scrollBufferedItems.push(item);\n        this.requiredItems++;\n        this.dispatchEvent('item-added-to-dom', item.model);\n\n        // When selected / unselected\n        item.element.addEventListener('select', () => {\n            this.dispatchEvent('select', this.domCollection.filter(i => i.selected).map(i => i.model));\n        });\n\n        // When activate (if activate event is given in options)\n        item.element.addEventListener('activate', (ev: CustomEvent<ItemActivateEventDetail<Model>>) => {\n            this.dispatchEvent('activate', { model: ev.detail.item.model, clickEvent: ev.detail.clickEvent });\n        });\n\n        if (this.options.lightbox) {\n            this.addItemToPhotoSwipeCollection(item);\n        }\n    }\n\n    protected updateNextButtonVisibility(): void {\n        if (!this.nextButton) {\n            return;\n        }\n\n        if (this.domCollection.length === this.collection.length) {\n            this.nextButton.style.display = 'none';\n        } else {\n            this.nextButton.style.display = 'block';\n        }\n    }\n\n    /**\n     * If infinite scroll (no option.rowsPerPage provided), a minimum height is setted to force gallery to overflow\n     * from viewport. This activates the scroll before adding items to dom. This prevents the scroll to fire new resize\n     * event and recompute all gallery twice on start.\n     */\n    protected extendToFreeViewport(): void {\n\n        if (this.options.rowsPerPage) {\n            return;\n        }\n\n        this.elementRef.style.minHeight = (this.getGalleryVisibleHeight() + 10) + 'px';\n    }\n\n    /**\n     * Space between the top of the gallery wrapper (parent of gallery root elementRef) and the bottom of the window\n     */\n    protected getGalleryVisibleHeight(): number {\n        if (this.document.defaultView) {\n            return this.document.defaultView.innerHeight - this.elementRef.offsetTop;\n        }\n\n        return 0;\n    }\n\n    protected startResize(): void {\n        this.bodyElementRef?.classList.add('resizing');\n    }\n\n    protected endResize(): void {\n        this.bodyElementRef?.classList.remove('resizing');\n    }\n\n    protected dispatchEvent<K extends keyof CustomEventDetailMap<Model>>(name: K, data: CustomEventDetailMap<Model>[K]): void;\n    protected dispatchEvent(name: keyof CustomEventDetailMap<Model>, data: CustomEventDetailMap<Model>[keyof CustomEventDetailMap<Model>]): void {\n        const event = new CustomEvent(name, { detail: data });\n        this.elementRef.dispatchEvent(event);\n    }\n\n    /**\n     * Effectively empty gallery, and should prepare container to receive new items\n     */\n    protected empty(): void {\n        if (this.bodyElementRef) {\n            this.bodyElementRef.innerHTML = '';\n        }\n\n        this.requestedIndexesLog.length = 0;\n        this._domCollection = [];\n        this._collection = [];\n    }\n\n    /**\n     * Listen to scroll event and manages rows additions for lazy load\n     * @param {HTMLElement | Document} element\n     */\n    private bindScroll(element: HTMLElement | Document) {\n\n        const scrollable = element;\n        const wrapper: HTMLElement = element instanceof Document ? element.documentElement : element;\n\n        const startScroll = debounce(() => this.elementRef.classList.add('scrolling'), 300, {\n            leading: true,\n            trailing: false,\n        });\n        const endScroll = debounce(() => this.elementRef.classList.remove('scrolling'), 300, {\n            leading: false,\n            trailing: true,\n        });\n\n        scrollable.addEventListener('scroll', () => {\n            startScroll();\n            endScroll();\n\n            const endOfGalleryAt = this.elementRef.offsetTop + this.elementRef.offsetHeight + this.options.infiniteScrollOffset;\n\n            // Avoid to expand gallery if we are scrolling up\n            const current_scroll_top = wrapper.scrollTop - (wrapper.clientTop || 0);\n            const wrapperHeight = wrapper.clientHeight;\n            const scroll_delta = current_scroll_top - this.old_scroll_top;\n            this.old_scroll_top = current_scroll_top;\n\n            // \"enableMoreLoading\" is a setting coming from the BE bloking / enabling dynamic loading of thumbnail\n            if (scroll_delta > 0 && current_scroll_top + wrapperHeight >= endOfGalleryAt) {\n                // When scrolling only add a row at once\n                this.onScroll();\n            }\n        });\n    }\n\n}\n","import {AbstractGallery, ModelAttributes} from './AbstractGallery';\n\nexport abstract class AbstractRowGallery<Model extends ModelAttributes> extends AbstractGallery<Model> {\n\n    protected onScroll(): void {\n        this.addRows(1);\n    }\n\n    protected onPageAdd(): void {\n        this.addRows(this.getRowsPerPage());\n    }\n\n    /**\n     * Add given number of rows to DOM\n     * @param rows\n     */\n    protected addRows(rows: number): void {\n\n        const nbVisibleImages = this.domCollection.length;\n\n        // Next row to add (first invisible row)\n        const nextRow = this.domCollection.length ? this.domCollection[nbVisibleImages - 1].row + 1 : 0;\n        const lastWantedRow = nextRow + rows - 1;\n\n        // Compute size only for elements we're going to add\n        const bufferedItems = this.collection.slice(nbVisibleImages);\n        this.organizeItems(bufferedItems, nextRow, lastWantedRow);\n        const itemsToAdd = bufferedItems.filter(i => i.row <= lastWantedRow);\n        itemsToAdd.forEach(i => this.addItemToDOM(i));\n\n        this.flushBufferedItems();\n        this.updateNextButtonVisibility();\n    }\n\n    protected endResize(): void {\n\n        super.endResize();\n\n        if (!this.domCollection.length) {\n            return;\n        }\n\n        // Compute with new width. Rows indexes may have change\n        this.organizeItems(this.domCollection);\n\n    }\n\n}\n","import { Item } from '../Item';\nimport { getImageRatio, getImageRatioAndIfCropped, RatioLimits } from '../Utility';\nimport { GalleryOptions, ModelAttributes, SizedModel } from './AbstractGallery';\nimport { AbstractRowGallery } from './AbstractRowGallery';\n\nexport interface NaturalGalleryOptions extends GalleryOptions {\n    rowHeight: number;\n    ratioLimit?: RatioLimits;\n}\n\nexport class Natural<Model extends ModelAttributes = ModelAttributes> extends AbstractRowGallery<Model> {\n\n    /**\n     * Options after having been defaulted\n     */\n    protected declare options: Required<NaturalGalleryOptions>;\n\n    constructor(elementRef: HTMLElement,\n        options: NaturalGalleryOptions,\n        scrollElementRef?: HTMLElement | null) {\n\n        super(elementRef, options, scrollElementRef);\n\n        if (!options.rowHeight || options.rowHeight <= 0) {\n            throw new Error('Option.rowHeight must be positive');\n        }\n    }\n\n    public static organizeItems<T extends ModelAttributes>(\n        gallery: Natural<T>,\n        items: Item<T>[],\n        fromRow = 0,\n        toRow: number | null = null,\n        currentRow: number | null = null,\n    ): void {\n\n        if (!currentRow) {\n            currentRow = fromRow ? fromRow : 0;\n        }\n\n        const options = gallery.options;\n\n        for (let chunkSize = 1; chunkSize <= items.length; chunkSize++) {\n\n            const chunk = items.slice(0, chunkSize);\n            const rowWidth = this.getRowWidth(chunk.map(c => c.model), options.rowHeight, options.gap, options.ratioLimit);\n\n            if (rowWidth >= gallery.width) {\n                // if end of row\n\n                this.computeSizes(chunk, gallery.width, options.gap, currentRow, null, options.ratioLimit);\n\n                const nextRow = currentRow + 1;\n                if (toRow === null || nextRow <= toRow) {\n                    Natural.organizeItems(gallery, items.slice(chunkSize), fromRow, toRow, nextRow);\n                }\n\n                break;\n            } else if (chunkSize === items.length) {\n                // if end of list\n                // the width is not fixed as we have not enough items\n                // size of images are indexed on max row height.\n                this.computeSizes(chunk, null, options.gap, currentRow, options.rowHeight, options.ratioLimit);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Compute sizes for given images to fit in given row width\n     * Items are updated\n     */\n    public static computeSizes<T extends ModelAttributes>(chunk: Item<T>[],\n        containerWidth: number | null,\n        margin: number,\n        row: number,\n        maxRowHeight: number | null = null,\n        ratioLimits?: RatioLimits): void {\n\n        const chunkModels = chunk.map(c => c.model);\n        const rowHeight = containerWidth ? this.getRowHeight(chunkModels, containerWidth, margin, ratioLimits) : (maxRowHeight ?? 0);\n        const rowWidth = this.getRowWidth(chunkModels, rowHeight, margin, ratioLimits);\n\n        // Overflowed pixels\n        const apportion = (rowWidth - (containerWidth ?? 0)) / chunk.length;\n        const excess = containerWidth ? apportion : 0;\n        let decimals = 0;\n\n        for (let i = 0; i < chunk.length; i++) {\n            const item = chunk[i];\n            const { ratio, cropped } = getImageRatioAndIfCropped(item.model, ratioLimits);\n            let width = ratio * rowHeight - excess;\n            decimals += width - Math.floor(width);\n            width = Math.floor(width);\n\n            if (decimals >= 1 || i === chunk.length - 1 && Math.round(decimals) === 1) {\n                width++;\n                decimals--;\n            }\n\n            item.width = width;\n            item.height = Math.floor(rowHeight);\n            item.cropped = cropped;\n            item.row = row;\n            item.last = i === chunk.length - 1;\n            item.style();\n        }\n    }\n\n    public static getRowWidth(models: SizedModel[], maxRowHeight: number, margin: number, ratioLimits?: RatioLimits): number {\n        return margin * (models.length - 1) + this.getRatios(models, ratioLimits) * maxRowHeight;\n    }\n\n    public static getRowHeight(models: SizedModel[], containerWidth: number, margin: number, ratioLimits?: RatioLimits): number {\n        return (containerWidth - margin * (models.length - 1)) / this.getRatios(models, ratioLimits);\n    }\n\n    /**\n     * Return the ratio format of models as if they where a single image\n     */\n    public static getRatios(models: SizedModel[], ratioLimits?: RatioLimits): number {\n        return models.reduce((total, model) => total + getImageRatio(model, ratioLimits), 0);\n    }\n\n    public addRows(rows: number): void {\n        this.completeLastRow();\n        super.addRows(rows);\n    }\n\n    public organizeItems(items: Item<Model>[], fromRow?: number, toRow?: number): void {\n        Natural.organizeItems(this, items, fromRow, toRow);\n    }\n\n    protected endResize(): void {\n        super.endResize();\n        this.completeLastRow();\n        this.flushBufferedItems();\n    }\n\n    protected getEstimatedColumnsPerRow(): number {\n\n        let ratio = 1;\n\n        // Better prediction using ratio if provided\n        if (this.options.ratioLimit && this.options.ratioLimit.min) {\n            ratio = this.options.ratioLimit.min;\n        }\n\n        return Math.ceil(((1 / ratio) * this.width + this.options.gap) / (this.options.rowHeight + this.options.gap));\n    }\n\n    protected getEstimatedRowsPerPage(): number {\n        return Math.ceil(this.getGalleryVisibleHeight() / (this.options.rowHeight + this.options.gap)) + 1;\n    }\n\n    private completeLastRow(): void {\n\n        if (!this.domCollection.length) {\n            return;\n        }\n\n        // Get last row number\n        const lastVisibleRow = this.domCollection[this.domCollection.length - 1].row;\n\n        // Get number of items in that last row\n        const visibleItemsInLastRow = this.domCollection.filter(i => i.row === lastVisibleRow).length;\n\n        // Get a list from first item of last row until end of collection\n        const collectionFromLastVisibleRow = this.collection.slice(this.domCollection.length - visibleItemsInLastRow);\n        this.organizeItems(collectionFromLastVisibleRow, collectionFromLastVisibleRow[0].row, collectionFromLastVisibleRow[0].row);\n        const itemsToAdd = collectionFromLastVisibleRow.slice(visibleItemsInLastRow)\n            .filter(i => i.row <= collectionFromLastVisibleRow[0].row);\n\n        itemsToAdd.forEach(i => this.addItemToDOM(i));\n    }\n}\n","import {Item} from './Item';\nimport {ModelAttributes} from './galleries/AbstractGallery';\n\nexport declare interface ColumnOptions {\n    width: number;\n    gap: number;\n}\n\nexport class Column<Model extends ModelAttributes> {\n\n    private readonly collection: Item<Model>[] = [];\n\n    private readonly _elementRef: HTMLElement;\n\n    public constructor(document: Document, private options: ColumnOptions) {\n        this._elementRef = document.createElement('div');\n        this._elementRef.classList.add('column');\n        this._elementRef.style.marginRight = this.options.gap + 'px';\n        this._elementRef.style.width = this.options.width + 'px';\n    }\n\n    public addItem(item: Item<Model>): void {\n        this.collection.push(item);\n    }\n\n    get height(): number {\n        return this._elementRef.offsetHeight;\n    }\n\n    get length(): number {\n        return this.collection.length;\n    }\n\n    get elementRef(): HTMLElement {\n        return this._elementRef;\n    }\n\n}\n","import { Column } from '../Column';\nimport { Item } from '../Item';\nimport { getImageRatioAndIfCropped, RatioLimits } from '../Utility';\nimport { AbstractGallery, GalleryOptions, ModelAttributes } from './AbstractGallery';\n\n\nexport interface MasonryGalleryOptions extends GalleryOptions {\n    columnWidth: number;\n    ratioLimit?: RatioLimits;\n}\n\nexport class Masonry<Model extends ModelAttributes = ModelAttributes> extends AbstractGallery<Model> {\n\n    /**\n     * Options after having been defaulted\n     */\n    protected declare options: Required<MasonryGalleryOptions>;\n\n    /**\n     * Regroup the list of columns\n     */\n    protected columns: Column<Model>[] = [];\n\n    constructor(elementRef: HTMLElement,\n        options: MasonryGalleryOptions,\n        scrollElementRef?: HTMLElement | null) {\n\n        super(elementRef, options, scrollElementRef);\n\n        if (!options.columnWidth || options.columnWidth <= 0) {\n            throw new Error('Option.columnWidth must be positive');\n        }\n    }\n\n    /**\n     * Compute sides with 1:1 ratio\n     */\n    public static organizeItems<T extends ModelAttributes>(gallery: Masonry<T>, items: Item<T>[], fromIndex = 0, toIndex: number | null = null): void {\n\n        const itemsPerRow = gallery.getEstimatedColumnsPerRow();\n\n        // Compute columnWidth of pictures\n        const columnWidth = gallery.getColumnWidth();\n\n        let lastIndex = toIndex ? itemsPerRow * (toIndex - fromIndex + 1) : items.length;\n        lastIndex = lastIndex > items.length ? items.length : lastIndex;\n\n        for (let i = 0; i < lastIndex; i++) {\n            const item = items[i];\n            const { ratio, cropped } = getImageRatioAndIfCropped(item.model, gallery.options.ratioLimit);\n\n            item.last = true;\n            item.width = Math.floor(columnWidth);\n            item.height = item.width / ratio;\n            item.cropped = cropped;\n            item.style(); // todo : externalise to split dom manipulation and logic computing\n        }\n    }\n\n    public init(): void {\n        super.init();\n\n        /**\n         * Setup scroll detection to prevent empty zones due to different heights\n         */\n        if (!this.options.infiniteScrollOffset) {\n\n            let ratio = 0.5; // Portrait format to maximize estimated height\n\n            // Better prediction using ratio if provided\n            if (this.options.ratioLimit && this.options.ratioLimit.min) {\n                ratio = this.options.ratioLimit.min;\n            }\n\n            const columnWidth = this.getColumnWidth();\n\n            this.options.infiniteScrollOffset = -1 * columnWidth / ratio;\n        }\n\n    }\n\n    public organizeItems(items: Item<Model>[], fromRow?: number, toRow?: number): void {\n        Masonry.organizeItems(this, items, fromRow, toRow);\n    }\n\n    protected initItems(): void {\n        this.addColumns();\n        super.initItems();\n    }\n\n    protected onScroll(): void {\n        this.addUntilFill();\n    }\n\n    protected onPageAdd(): void {\n        this.addUntilFill();\n    }\n\n    protected getEstimatedColumnsPerRow(): number {\n        return Math.ceil((this.width - this.options.gap) / (this.options.columnWidth + this.options.gap));\n    }\n\n    protected getEstimatedRowsPerPage(): number {\n\n        let ratio = 1.75; // ~16/9 - landscape format to minimum the height and maximize the prediction of the number of items\n\n        // Better prediction using ratio if provided\n        if (this.options.ratioLimit && this.options.ratioLimit.max) {\n            ratio = this.options.ratioLimit.max;\n        }\n\n        const columnWidth = this.getColumnWidth();\n        const estimatedImageHeight = columnWidth / ratio;\n        return Math.ceil(this.getGalleryVisibleHeight() / estimatedImageHeight);\n    }\n\n    /**\n     * Use current gallery height as reference. To fill free space it add images until the gallery height changes, then are one more row\n     */\n    protected addUntilFill(): void {\n        do {\n            this.addItemsToDom(1);\n        } while (this.viewPortIsNotFilled() && this.domCollection.length < this.collection.length);\n    }\n\n    protected addItemToDOM(item: Item<Model>): void {\n        const shortestColumn = this.getShortestColumn();\n        shortestColumn.addItem(item);\n        super.addItemToDOM(item, shortestColumn.elementRef);\n    }\n\n    protected endResize(): void {\n\n        super.endResize();\n\n        if (!this.domCollection.length) {\n            return;\n        }\n\n        // Compute with new width. Rows indexes may have change\n        this.domCollection.length = 0;\n        this.addColumns();\n        this.addUntilFill();\n    }\n\n    protected addColumns(): void {\n        if (!this.bodyElementRef) {\n            throw new Error('Gallery not initialized');\n        }\n\n        this.bodyElementRef.innerHTML = '';\n        this.columns = [];\n        const columnWidth = this.getColumnWidth();\n        for (let i = 0; i < this.getEstimatedColumnsPerRow(); i++) {\n            const columnRef = new Column<Model>(this.document, { width: columnWidth, gap: this.options.gap });\n            this.columns.push(columnRef);\n            this.bodyElementRef.appendChild(columnRef.elementRef);\n        }\n    }\n\n    protected empty(): void {\n        super.empty();\n        this.addColumns();\n    }\n\n    /**\n     * Returns true if at least one columns doesn't overflow on the bottom of the viewport\n     */\n    private viewPortIsNotFilled(): boolean {\n        return this.columns.some(c => c.elementRef.getBoundingClientRect().bottom < this.document.documentElement.clientHeight);\n    }\n\n    private addItemsToDom(nbItems: number) {\n\n        const nbVisibleImages = this.domCollection.length;\n\n        // Next row to add (first invisible row)\n        const firstIndex = this.domCollection.length ? nbVisibleImages : 0;\n        const lastWantedIndex = firstIndex + nbItems - 1;\n\n        // Compute size only for elements we're going to add\n        this.organizeItems(this.collection.slice(nbVisibleImages), firstIndex, lastWantedIndex);\n\n        for (let i = nbVisibleImages; i < this.collection.length; i++) {\n            const item = this.collection[i];\n            if (i <= lastWantedIndex) {\n                this.addItemToDOM(item);\n            } else {\n                break;\n            }\n        }\n\n        this.flushBufferedItems();\n        this.updateNextButtonVisibility();\n    }\n\n    /**\n     * Return square side size\n     */\n    private getColumnWidth(): number {\n        const itemsPerRow = this.getEstimatedColumnsPerRow();\n        return Math.floor((this.width - (itemsPerRow - 1) * this.options.gap) / itemsPerRow);\n    }\n\n    private getShortestColumn(): Column<Model> {\n        return this.columns.reduce((shortestColumn, column) => {\n            if (!shortestColumn) {\n                return column;\n            }\n\n            return column.height < shortestColumn.height ? column : shortestColumn;\n        });\n    }\n\n}\n","import {Item} from '../Item';\nimport {GalleryOptions, ModelAttributes} from './AbstractGallery';\nimport {AbstractRowGallery} from './AbstractRowGallery';\n\nexport interface SquareGalleryOptions extends GalleryOptions {\n    itemsPerRow: number;\n}\n\nexport class Square<Model extends ModelAttributes = ModelAttributes> extends AbstractRowGallery<Model> {\n\n    /**\n     * Options after having been defaulted\n     */\n    protected declare options: Required<SquareGalleryOptions>;\n\n    constructor(elementRef: HTMLElement,\n                options: SquareGalleryOptions,\n                scrollElementRef?: HTMLElement | null) {\n\n        super(elementRef, options, scrollElementRef);\n\n        if (!options.itemsPerRow || options.itemsPerRow <= 0) {\n            throw new Error('Option.itemsPerRow must be positive');\n        }\n    }\n\n    /**\n     * Compute sides with 1:1 ratio\n     */\n    public static organizeItems<T extends ModelAttributes>(gallery: Square<T>, items: Item<T>[], firstRowIndex = 0, toRow: number | null = null): void {\n\n        const sideSize = gallery.getItemSideSize();\n        let lastIndex = toRow ? gallery.options.itemsPerRow * (toRow - firstRowIndex + 1) : items.length;\n        lastIndex = lastIndex > items.length ? items.length : lastIndex;\n\n        for (let i = 0; i < lastIndex; i++) {\n            const item = items[i];\n            item.width = Math.floor(sideSize);\n            item.height = Math.floor(sideSize);\n            item.cropped = true;\n            item.last = i % gallery.options.itemsPerRow === gallery.options.itemsPerRow - 1;\n            item.row = Math.floor(i / gallery.options.itemsPerRow) + firstRowIndex;\n            item.style();\n        }\n    }\n\n    protected getEstimatedColumnsPerRow(): number {\n        return this.options.itemsPerRow;\n    }\n\n    protected getEstimatedRowsPerPage(): number {\n        return Math.ceil(this.getGalleryVisibleHeight() / this.getItemSideSize());\n    }\n\n    /**\n     * Return square side size\n     */\n    protected getItemSideSize(): number {\n        const itemsPerRow = this.getEstimatedColumnsPerRow();\n        return (this.width - (itemsPerRow - 1) * this.options.gap) / itemsPerRow;\n    }\n\n    public organizeItems(items: Item<Model>[], fromRow?: number, toRow?: number): void {\n        Square.organizeItems(this, items, fromRow, toRow);\n    }\n\n}\n"],"mappings":"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","names":["Symbol","objectProto","nativeObjectToString","symToStringTag","funcProto","objectProto","funcToString","hasOwnProperty","objectProto","hasOwnProperty","MAX_SAFE_INTEGER","objectProto","objectProto","hasOwnProperty","Buffer","argsTag","funcTag","freeExports","freeModule","moduleExports","objectProto","hasOwnProperty","objectProto","hasOwnProperty","objectProto","hasOwnProperty","objectProto","hasOwnProperty","HASH_UNDEFINED","INFINITY","objectTag","funcProto","objectProto","funcToString","hasOwnProperty","freeExports","freeModule","moduleExports","Buffer","Uint8Array","FUNC_ERROR_TEXT","nativeMax","createElement","className","tagName","appendToEl","el","document","appendChild","equalizePoints","p1","p2","x","y","id","undefined","roundPoint","p","Math","round","getDistanceBetween","abs","sqrt","pointsEqual","clamp","val","min","max","toTransformString","scale","propValue","setTransform","style","transform","defaultCSSEasing","setTransitionStyle","prop","duration","ease","transition","setWidthHeight","w","h","width","height","removeTransitionStyle","decodeImage","img","decode","catch","complete","Promise","resolve","reject","onload","onerror","LOAD_STATE","IDLE","LOADING","LOADED","ERROR","specialKeyUsed","e","button","ctrlKey","metaKey","altKey","shiftKey","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","isSafari","navigator","vendor","match","supportsPassive","window","addEventListener","Object","defineProperty","get","DOMEvents","constructor","_pool","add","target","type","listener","passive","_toggleListener","remove","removeAll","forEach","poolItem","unbind","skipPool","methodName","types","split","eType","filter","push","eventOptions","getViewportSize","options","pswp","getViewportSizeFn","newViewportSize","documentElement","clientWidth","innerHeight","parsePaddingOption","viewportSize","itemData","index","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","Number","getPanAreaSize","PanBounds","slide","currZoomLevel","center","update","reset","_updateAxis","dispatch","axis","elSize","paddingProp","data","panAreaSize","correctPan","panOffset","MAX_IMAGE_WIDTH","ZoomLevel","elementSize","fit","fill","vFill","initial","secondary","maxWidth","maxHeight","hRatio","vRatio","_getInitial","_getSecondary","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionName","optionValue","Slide","isActive","currIndex","currentResolution","pan","isFirstSlide","opener","isOpen","content","contentLoader","getContentBySlide","container","holderElement","heavyAppended","bounds","prevDisplayedWidth","prevDisplayedHeight","setIsActive","activate","deactivate","append","transformOrigin","calculateSize","load","updateContentSize","appendHeavy","zoomAndPanToInitial","applyCurrentZoomPan","appendHeavyNearby","mainScroll","isShifted","defaultPrevented","destroy","hasSlide","resize","panTo","force","scaleMultiplier","sizeChanged","setDisplayedSize","getPlaceholderElement","placeholder","element","zoomTo","destZoomLevel","centerPoint","transitionDuration","ignoreBounds","isZoomable","animations","stopAllPan","prevZoomLevel","setZoomLevel","calculateZoomToPanOffset","finishTransition","_setResolution","startTransition","isPan","name","getCurrentTransform","onComplete","easing","toggleZoom","zoomAnimationDuration","point","totalPanDistance","getViewportCenterPoint","zoomFactor","panX","panY","isPannable","Boolean","_applyZoomTransform","currSlide","zoom","newResolution","PAN_END_FRICTION","VERTICAL_DRAG_FRICTION","MIN_RATIO_TO_CLOSE","MIN_NEXT_SLIDE_SPEED","project","initialVelocity","decelerationRate","DragHandler","gestures","startPan","start","stopAll","change","prevP1","dragAxis","closeOnVerticalDrag","isMultitouch","_setPanWithFriction","bgOpacity","_getVerticalDragRatio","applyBgOpacity","mainScrollChanged","_panOrMoveMainScroll","end","velocity","indexDiff","mainScrollShiftDiff","getCurrSlideX","currentSlideVisibilityRatio","moveIndexBy","correctZoomPan","_finishPanGestureForAxis","panPos","restoreBgOpacity","projectedPosition","vDragRatio","projectedVDragRatio","close","correctedPanPosition","dampingRatio","initialBgOpacity","totalPanDist","startSpring","onUpdate","pos","animationProgressRatio","floor","delta","newMainScrollX","moveTo","newPan","allowPanToNext","currSlideMainScrollX","isLeftToRight","isRightToLeft","wasAtMinPanPosition","wasAtMaxPanPosition","potentialPan","customFriction","correctedPan","UPPER_ZOOM_FRICTION","LOWER_ZOOM_FRICTION","getZoomPointsCenter","ZoomHandler","_startPan","_startZoomPoint","_zoomPoint","_wasOverFitZoomLevel","_startZoomLevel","startP1","startP2","minZoomLevel","maxZoomLevel","pinchToClose","_calculatePanForZoomLevel","ignoreGesture","destinationZoomLevel","currZoomLevelNeedsChange","initialPan","destinationPan","panNeedsChange","naturalFrequency","now","newZoomLevel","didTapOnMainContent","event","closest","TapHandler","click","originalEvent","targetClassList","classList","isImageClick","contains","isBackgroundClick","_doClickOrTapAction","tap","doubleTap","actionName","actionFullName","call","clickToCloseNonZoomable","toggle","AXIS_SWIPE_HYSTERISIS","DOUBLE_TAP_DELAY","MIN_TAP_DISTANCE","Gestures","prevP2","_lastStartP1","_intervalP1","_numActivePoints","_ongoingPointers","_touchEventEnabled","_pointerEventEnabled","PointerEvent","supportsTouch","maxTouchPoints","_intervalTime","_velocityCalculated","isDragging","isZooming","raf","_tapTimer","drag","tapHandler","on","events","scrollWrap","_onClick","bind","_bindEvents","ontouchmove","ontouchend","pref","down","up","cancel","cancelEvent","onPointerDown","onPointerMove","onPointerUp","isMousePointer","pointerType","preventDefault","mouseDetected","_preventPointerEventBehaviour","_updatePoints","_clearTapTimer","_calculateDragDirection","_updateStartPoints","Date","_rafStopLoop","_rafRenderLoop","_finishDrag","_updateVelocity","_finishTap","_updatePrevPoints","requestAnimationFrame","time","_getVelocity","indexOf","tapDelay","doubleTapAction","setTimeout","clearTimeout","displacement","cancelAnimationFrame","preventPointerEvent","applyFilters","pointerEvent","pointerIndex","findIndex","ongoingPointer","pointerId","splice","_convertEventPosToPoint","length","touchEvent","touches","diff","axisToCheck","pageX","offset","pageY","identifier","stopPropagation","MAIN_SCROLL_END_FRICTION","MainScroll","slideWidth","_currPositionIndex","_prevPositionIndex","_containerShiftIndex","itemHolders","resizeSlides","newSlideWidth","spacing","slideWidthChanged","itemHolder","resetPosition","appendHolders","i","setAttribute","display","canBeSwiped","getNumItems","animate","velocityX","newIndex","potentialIndex","numSlides","canLoop","getLoopedIndex","distance","stopMainScroll","destinationX","updateCurrItem","isMainScroll","currDiff","currDistance","positionDifference","diffAbs","tempHolder","shift","setContent","pop","unshift","updateLazy","dragging","newSlideIndexOffset","KeyboardKeyCodesMap","Escape","z","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Tab","getKeyboardEventKey","key","isKeySupported","Keyboard","_wasFocused","trapFocus","initialPointerPos","_focusRoot","_onFocusIn","_onKeyDown","lastActiveElement","activeElement","returnFocus","focus","keydownAction","isForward","keyCode","escKey","arrowKeys","template","DEFAULT_EASING","CSSAnimation","props","onFinish","_target","_onComplete","_finished","_onTransitionEnd","_helperTimeout","_finalizeAnimation","removeEventListener","DEFAULT_NATURAL_FREQUENCY","DEFAULT_DAMPING_RATIO","SpringEaser","_dampingRatio","_naturalFrequency","_dampedFrequency","easeFrame","deltaPosition","deltaTime","coeff","naturalDumpingPow","E","dumpedFCos","cos","dumpedFSin","sin","SpringAnimation","_raf","easer","prevTime","animationLoop","Animations","activeAnimations","_start","isSpring","animation","stop","isPanRunning","some","ScrollWheel","_onWheel","deltaX","deltaY","wheelToZoom","deltaMode","clientX","clientY","addElementHTML","htmlData","isCustomSVG","svgData","out","join","size","outlineID","inner","UIElement","elementHTML","html","isButton","toLowerCase","title","ariaLabel","ariaText","innerHTML","onInit","onClick","onclick","appendTo","topBar","initArrowButton","isNextButton","loop","disabled","arrowPrev","order","arrowNext","closeButton","zoomButton","loadingIndicator","indicatorElement","isVisible","delayTimeout","toggleIndicatorClass","setIndicatorVisibility","visible","updatePreloaderVisibility","isLoading","preloaderDelay","ui","counterIndicator","counterElement","innerText","indexIndicatorSep","setZoomedIn","isZoomedIn","UI","isRegistered","uiElementsData","items","_lastUpdatedZoomLevel","init","sort","a","b","uiElementData","registerElement","_onZoomPanUpdate","elementData","isClosing","currZoomLevelDiff","potentialZoomLevel","imageClickAction","getBoundsByElement","thumbAreaRect","getBoundingClientRect","left","top","getCroppedBoundsByElement","imageWidth","imageHeight","fillZoomLevel","offsetX","offsetY","innerRect","getThumbBounds","instance","thumbBounds","thumbnail","thumbSelector","matches","querySelector","thumbCropped","PhotoSwipeEvent","details","assign","Eventable","_listeners","_filters","addFilter","fn","priority","f1","f2","removeFilter","args","apply","off","Placeholder","imageSrc","imgEl","decoding","alt","src","parentNode","Content","displayedImageWidth","displayedImageHeight","isAttached","isDecoding","state","removePlaceholder","keepPlaceholder","isLazy","reload","usePlaceholder","placeholderSrc","msrc","placeholderEl","parentElement","prepend","isImageContent","loadImage","imageElement","updateSrcsetSizes","srcset","onLoaded","onError","setSlide","displayError","isError","isInitialSizeUpdate","image","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","lazyLoad","errorMsgEl","errorMsg","supportsDecode","finally","appendImage","MIN_SLIDES_TO_CACHE","lazyLoadData","createContentFromData","zoomLevel","ceil","lazyLoadSlide","getItemData","ContentLoader","limit","preload","_cachedItems","loadSlideByIndex","initialIndex","getContentByIndex","addToCache","removeByIndex","indexToRemove","item","removedItem","find","PhotoSwipeBase","numItems","dataSource","_getGalleryDOMElements","gallery","dataSourceItem","_domElementToItemData","galleryElement","children","childSelector","linkEl","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","getAttribute","pswpCropped","cropped","MIN_OPACITY","Opener","isClosed","isOpening","_duration","_useAnimation","_croppedZoom","_animateRootOpacity","_animateBgOpacity","_placeholder","_opacityElement","_cropContainer1","_cropContainer2","_thumbBounds","_prepareOpen","open","hideAnimationDuration","maxWidthToAnimate","_applyStartProps","showAnimationDuration","showHideAnimationType","showHideOpacity","_initialThumbBounds","_animateZoom","bg","opacity","overflow","_setClosedStateZoomPan","willChange","decoded","isDelaying","_initiate","setProperty","_animateToOpenState","_animateToClosedState","_onAnimationComplete","_animateTo","containerOnePanX","containerOnePanY","containerTwoPanX","containerTwoPanY","animProps","defaultOptions","bgClickAction","tapAction","PhotoSwipe","_prepareOptions","_prevViewportSize","isDestroying","hasMouse","_initialItemData","keyboard","_createMainStructure","rootClasses","mainClass","scrollWheel","isNaN","updateSize","pageYOffset","_handlePageResize","_updatePageScrollOffset","goTo","next","prev","refreshSlideContent","slideIndex","potentialHolderIndex","holder","matchMedia","test","userAgent","setScrollOffset","body","createElement","className","tagName","appendToEl","el","document","appendChild","toTransformString","x","y","scale","propValue","undefined","setWidthHeight","w","h","style","width","height","LOAD_STATE","IDLE","LOADING","LOADED","ERROR","specialKeyUsed","e","button","ctrlKey","metaKey","altKey","shiftKey","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","isPswpClass","fn","prototype","goTo","isSafari","navigator","vendor","match","PhotoSwipeEvent","constructor","type","details","defaultPrevented","Object","assign","preventDefault","Eventable","_listeners","_filters","pswp","options","addFilter","name","priority","push","sort","f1","f2","removeFilter","filter","applyFilters","args","forEach","apply","on","off","listener","dispatch","event","call","Placeholder","imageSrc","container","element","imgEl","decoding","alt","src","setAttribute","setDisplayedSize","transformOrigin","transform","destroy","parentNode","remove","Content","itemData","instance","index","data","placeholder","slide","displayedImageWidth","displayedImageHeight","Number","isAttached","hasSlide","isDecoding","state","content","removePlaceholder","keepPlaceholder","setTimeout","load","isLazy","reload","usePlaceholder","placeholderSrc","msrc","isFirstSlide","placeholderEl","parentElement","prepend","isImageContent","loadImage","innerHTML","html","updateContentSize","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onload","onerror","onError","setSlide","isActive","heavyAppended","append","displayError","isError","isLoading","isInitialSizeUpdate","isZoomable","image","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","lazyLoad","errorMsgEl","innerText","errorMsg","supportsDecode","decode","catch","finally","appendImage","activate","holderElement","deactivate","getViewportSize","getViewportSizeFn","newViewportSize","documentElement","clientWidth","window","innerHeight","parsePaddingOption","prop","viewportSize","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","getPanAreaSize","MAX_IMAGE_WIDTH","ZoomLevel","panAreaSize","elementSize","fit","fill","vFill","initial","secondary","max","min","update","maxWidth","maxHeight","hRatio","vRatio","Math","_getInitial","_getSecondary","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionName","optionValue","currZoomLevel","lazyLoadData","createContentFromData","zoomLevel","ceil","lazyLoadSlide","getItemData","PhotoSwipeBase","getNumItems","numItems","dataSource","length","items","_getGalleryDOMElements","gallery","dataSourceItem","_domElementToItemData","galleryElement","children","childSelector","linkEl","querySelector","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","getAttribute","pswpCropped","cropped","thumbCropped","PhotoSwipeLightbox","_uid","shouldOpen","_preloadedContent","onThumbnailsClick","bind","init","gallerySelector","addEventListener","initialPoint","clientX","clientY","clickedIndex","getClickedIndex","currentTarget","loadAndOpen","getClickedIndexFn","clickedTarget","target","childElements","clickedChildIndex","findIndex","child","contains","galleryElements","initialPointerPos","preload","promiseArray","pswpModuleType","pswpModule","Promise","resolve","Error","openPromise","preloadFirstSlide","uid","all","then","iterableModules","mainModule","_openPhotoswipe","module","default","keys","contentLoader","addToCache","removeEventListener","document","document","document"]}